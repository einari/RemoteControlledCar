<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenSource.XBee</name>
    </assembly>
    <members>
        <member name="T:NETMF.OpenSource.XBee.Api.ApiId">
            <summary>
            In API frame <see cref="T:NETMF.OpenSource.XBee.Api.ApiId"/> indicates which API message will be contained in the packet payload.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.TxRequest64">
            <summary>
            API ID: 0x00
            <para>Transmit data as an RF Packet to 64-bit address destination.</para>
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.TxRequest16">
            <summary>
            API ID: 0x01
            <para>Transmit data as an RF Packet to 16-bit address destination.</para>
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.AtCommand">
            <summary>
            API ID: 0x08
            <para>Allows for module parameters to be queried or set.</para>
            </summary>
            <remarks>
            When using this command ID, new parameter values are applied immediately. 
            This includes any register set with the <see cref="F:NETMF.OpenSource.XBee.Api.ApiId.AtCommandQueue"/> API type.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.AtCommandQueue">
            <summary>
            API ID: 0x09
            <para>Allows for module parameters to be queried or set.</para>
            </summary>
            <remarks>
            In contrast to the <see cref="F:NETMF.OpenSource.XBee.Api.ApiId.AtCommand"/> API type, new parameter values 
            are queued and not applied until either the <see cref="F:NETMF.OpenSource.XBee.Api.ApiId.AtCommand"/> 
            API type or the <see cref="F:NETMF.OpenSource.XBee.Api.Common.AtCmd.ApplyChanges"/> command is issued. 
            Register queries (reading parameter values) are returned immediately
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.ZnetTxRequest">
            <summary>
            API ID: 0x10
            <para>Send data as an Zigbee RF packet to the specified destination.</para>
            </summary>
            <remarks>
            The 64-bit destination address should be set to 0x000000000000FFFF for a broadcast transmission (to all devices). 
            The coordinator can be addressed by either setting the 64-bit address to all 0x00s and the 16-bit address to 0xFFFE, 
            OR by setting the 64-bit address to the coordinator's 64-bit address and the 16-bit address to 0x0000. 
            For all other transmissions, setting the 16-bit address to the correct 16-bit address can help improve performance 
            when transmitting to multiple destinations. If a 16-bit address is not known, this field should be set to 0xFFFE (unknown). 
            A <see cref="F:NETMF.OpenSource.XBee.Api.ApiId.TxStatusResponse"/> packet will indicate the discovered 16-bit address, if successful.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.ZnetExplicitTxRequest">
            <summary>
            API ID: 0x11
            <para>Allows ZigBee application layer fields (endpoint and cluster ID) to be specified for a data transmission.</para>
            </summary>
            <remarks>
            Similar to <see cref="F:NETMF.OpenSource.XBee.Api.ApiId.ZnetTxRequest"/>, but also requires ZigBee application layer addressing fields to be
            specified (endpoints, cluster ID, profile ID). An <see cref="F:NETMF.OpenSource.XBee.Api.ApiId.ZnetExplicitTxRequest"/> frame causes the module to
            send data as an RF packet to the specified destination, using the specified source and destination endpoints,
            cluster ID, and profile ID.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.RemoteAtCommand">
            <summary>
            API ID: 0x17
            <para>Allows for remote module parameters to be queried or set.</para>
            </summary>
            <remarks>
            For parameter changes on the remote device to take effect, changes must be applied, either by setting the 
            apply changes options bit, or by sending an <see cref="F:NETMF.OpenSource.XBee.Api.Common.AtCmd.ApplyChanges"/> command to the remote.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.CreateSourceRoute">
            <summary>
            API ID: 0x21
            <para>Creates a source route in the module.</para>
            </summary>
            <remarks>
            <para>A source route specifies the complete route a packet should traverse to get from source to destination. 
            Source routing should be used with many-to-one routing for best results.</para>
            <para>Note: Both the 64-bit and 16-bit destination addresses are required when creating a source route. 
            These are obtained when a <see cref="F:NETMF.OpenSource.XBee.Api.ApiId.RouteRecord"/> frame is received.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.RegisterDevice">
            <summary>
            API ID: 0x24
            <para>Registers a new device into the trust center's key table.</para>
            </summary>
            <remarks>
            A KY command can be used to set the new device’s initial link key.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.Rx64Response">
            <summary>
            API ID: 0x80
            <para>RF packet received from 64-bit address sender.</para>
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.Rx16Response">
            <summary>
            API ID: 0x81
            <para>RF packet received from 16-bit address sender.</para>
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.Rx64IoResponse">
            <summary>
            API ID: 0x82
            <para>I/O data received from 64-bit sender.</para>
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.Rx16IoResponse">
            <summary>
            API ID: 0x83
            <para>I/O data received from 16-bit sender.</para>
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.AtResponse">
            <summary>
            API ID: 0x88
            <para>Response to previous <see cref="F:NETMF.OpenSource.XBee.Api.ApiId.AtCommand"/> command.</para>
            </summary>
            <remarks>
            In response to a <see cref="F:NETMF.OpenSource.XBee.Api.ApiId.AtCommand"/>, the module will send a <see cref="F:NETMF.OpenSource.XBee.Api.ApiId.AtResponse"/>.
            Some commands will send back multiple frames (<see cref="F:NETMF.OpenSource.XBee.Api.Common.AtCmd.NodeDiscover"/> or <see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.ActiveScan"/>). 
            These commands will end by sending a frame with <see cref="P:NETMF.OpenSource.XBee.Api.AtResponse.IsOk"/> set to <c>true</c> and empty payload.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.TxStatusResponse">
            <summary>
            API ID: 0x89
            <para>Result of sending an RF packet.</para>
            </summary>
            <remarks>
            When <see cref="F:NETMF.OpenSource.XBee.Api.ApiId.TxRequest16"/> or <see cref="F:NETMF.OpenSource.XBee.Api.ApiId.TxRequest64"/> is completed, 
            the module sends a <see cref="F:NETMF.OpenSource.XBee.Api.ApiId.TxStatusResponse"/>. This message will indicate 
            if the packet was transmitted successfully or if there was a failure.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.ModemStatusResponse">
            <summary>
            API ID: 0x8A
            <para>Module current status.</para>
            </summary>
            <remarks>
            RF module status messages are sent from the module in response to specific conditions like reboot.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.ZnetTxStatusResponse">
            <summary>
            API ID: 0x8B
            <para>Result of sending an Zigbee RF packet.</para>
            </summary>
            <remarks>
            When <see cref="F:NETMF.OpenSource.XBee.Api.ApiId.ZnetTxRequest"/> or <see cref="F:NETMF.OpenSource.XBee.Api.ApiId.ZnetExplicitTxRequest"/> is completed, 
            the module sends a <see cref="F:NETMF.OpenSource.XBee.Api.ApiId.ZnetTxStatusResponse"/>. This message will indicate 
            if the packet was transmitted successfully or if there was a failure.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.ZnetRxResponse">
            <summary>
            API ID: 0x90
            <para>Zigbee RF packet received from remote sender.</para>
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.ZnetExplicitRxResponse">
            <summary>
            API ID: 0x91
            <para>Explicit Zigbee RF packet received from remote sender.</para>
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.ZnetIoSampleResponse">
            <summary>
            API ID: 0x92
            <para>I/O packet received from remote sender.</para>
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.ZnetSensorResponse">
            <summary>
            API ID: 0x94
            <para>Zigbee sensor packet from a Digi 1-wire sensor adapter.</para>
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.ZnetNodeIdentifierResponse">
            <summary>
            API ID: 0x95
            <para>Received when a module transmits a node identification message to identify itself.</para>
            </summary>
            <remarks>
            The data portion of this frame is similar to <see cref="F:NETMF.OpenSource.XBee.Api.Common.AtCmd.NodeDiscover"/> frame.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.RemoteAtResponse">
            <summary>
            API ID: 0x97
            <para>Response to previous <see cref="F:NETMF.OpenSource.XBee.Api.ApiId.RemoteAtCommand"/> command.</para>
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.FirwareUpdateStatus">
            <summary>
            API ID: 0xA0
            <para>Status indication of Over-the-Air firmware update transmission attempt.</para>
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.RouteRecord">
            <summary>
            API ID: 0xA1
            <para>Received whenever a device sends a ZigBee route record command.</para>
            </summary>
            <remarks>
            This is used with many-to-one routing to create source routes for devices in a network.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.DeviceAuthenticatedIndicator">
            <summary>
            API ID: 0xA2
            <para>Received whenever a device is authenticated by Trust Center.</para>
            </summary>
            <remarks>
            This frame is sent out the UART of the Trust Center when a new device 
            is authenticated on a Smart Energy network.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.ManyToOneRouteRequest">
            <summary>
            API ID: 0xA3
            <para>Many-to-one route request indicator frame.</para>
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.RegisterJoiningDeviceStatus">
            <summary>
            API ID: 0xA4
            <para>Received whenever a device is authenticated by Trust Center.</para>
            </summary>
            <remarks>
            This frame is sent out the UART of the Trust Center when a new device 
            is authenticated on a Smart Energy network.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.JoinNotificationStatus">
            <summary>
            API ID: 0xA5
            <para>Received whenever a device attempts to join, rejoin, or leave the network.</para>
            </summary>
            <remarks>
            This frame is sent out the UART of the Trust Center when a device attempts to join, rejoin, or leave the network. 
            It is enabled by setting bit 0x02 in the DO register.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.Unknown">
            <summary>
            Unknown API ID value.
            </summary>
            <remarks>
            Indicates that we've parsed a packet for which we didn't 
            know how to handle the API type. This will be parsed 
            into a GenericResponse   
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ApiId.ErrorResponse">
            <summary>
            Error occured while parsing packet.
            </summary>
            <remarks>
            This is returned if an error occurs during packet parsing
            and does not correspond to a XBee API ID.
            </remarks>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Common.ApiModes">
            <summary>
            API Modes   
            </summary>
            <remarks>
            TODO: Update  comments        
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.ApiModes.Disabled">
            <summary>
            Disabled (Transparent operation)
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.ApiModes.Enabled">
            <summary>
            API enabled
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.ApiModes.EnabledWithEscaped">
            <summary>
            API enabled (with escaped characters)
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.ApiModes.Unknown">
            <summary>
            The undefined value.
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Common.DiscoverResult">
            <summary>
             TODO: Update comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Common.DiscoverResult.ToString">
            <summary>
              TODO: Update Comments
                
            </summary>
            <returns>
                A string value...
            </returns>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.Common.DiscoverResult.NodeInfo">
            <summary>
              TODO: Update Comments
                
            </summary>
            <value>
                <para>
                    
                </para>
            </value>
            <remarks>
                
            </remarks>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Common.ResetMode">
            <summary>
            Reset Mode
            </summary>
            <remarks>
            TODO: Update  comments    
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.ResetMode.Software">
            <summary>
            Reset module.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.ResetMode.Network">
            <summary>
            Reset network layer parameters.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.ResetMode.RestoreDefaults">
            <summary>
            Restore module parameters to factory defaults.
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.AtCommand">
            <summary>
            API technique to set/query commands
            </summary>
            <remarks>
            WARNING: Any changes made will not survive a power cycle unless written to memory with WR command
            According to the manual, the WR command can only be written so many times.. however many that is.
            <para>
            API ID: 0x8
            </para>
            Determining radio type with HV:
            <list type="table">
                <listheader>
                    <term>Byte 1</term>
                    <description>Part Number</description>
                </listheader>  
                <item>
                    <term>x17</term>
                    <description>XB24 (series 1)</description>
                </item>
                <item>
                    <term>x18</term>
                    <description>XBP24 (series 1)</description>
                </item>
                <item>
                    <term>x19</term>
                    <description>XB24-B (series 2</description>
                </item>
                <item>
                    <term>x1A</term>
                    <description>XBP24-B (series 2)</description>
                </item>
            </list>
            XB24-ZB
            XBP24-ZB
            </remarks>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.AtCommand.#ctor(System.UInt16,System.Byte[])">
            <summary>
            </summary>
            <param name="command"></param>
            <param name="value"></param>
            <param name="frameId">frameId must be > 0 for a response</param>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.AtCommandQueue">
            <summary>
            AT Command Queue
            API ID: 0x9
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.XBeeFrameIdResponse">
            <summary>
            Represents all XBee responses that contain a frame id
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.XBeeResponse">
            <summary>
            The super class of all XBee Receive packets
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.XBeeResponse.Finish">
            <summary>
            For internal use only.  Called after successful parsing 
            to allow subclass to do any final processing before delivery
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.XBeeResponse.Parse(NETMF.OpenSource.XBee.Api.IPacketParser)">
            <summary>
            All subclasses must implement to parse the packet from the input stream.
            The subclass must parse all bytes in the packet starting after the API_ID, and
            up to but not including the checksum.  Reading either more or less bytes that expected will
            result in an error.
            </summary>
            <param name="parser"></param>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.XBeeResponse.Error">
            <summary>
            Indicates an error occurred during the parsing of the packet.
            This may indicate a bug in this software or in the XBee firmware.
            Absence of an error does not indicate the request was successful
            you will need to inspect the status byte of the response object 
            (if available) to determine success.
            </summary>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.XBeeResponse.RawPacketBytes">
            <summary>
            Returns an array all bytes (as received off radio, including escape bytes)
            in packet except the start byte.  
            </summary>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.AtResponse.Status">
            <summary>
            Returns the command data byte array.
            A zero length array will be returned if the command data is not specified.
            This is the case if the at command set a value, or executed a command that does
            not have a value (like FR)
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.AtResponseStatus">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.AtResponseStatus.Ok">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.AtResponseStatus.Error">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.AtResponseStatus.InvalidCommand">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.AtResponseStatus.IvalidParameter">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.AtResponseStatus.TransmissionFailed">
            <summary>
            Series 1 remote AT only according to spec.
            Also series 2 in 2x64 zb pro firmware
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Common.HardwareVersions">
            <summary>
            Hardware Versions
            </summary>
            <remarks>
            TODO: Update  comments    
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.HardwareVersions.Series6">
            <summary>
            WiFi modules
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Common.SaveSettings">
            <summary>
             TODO: Update comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Common.SaveSettings.Write(NETMF.OpenSource.XBee.XBeeApi)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="xbee" type="NETMF.OpenSource.XBee.Api.XBee">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Common.SaveSettings.Write(NETMF.OpenSource.XBee.XBeeApi,NETMF.OpenSource.XBee.Api.XBeeAddress)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="sender" type="NETMF.OpenSource.XBee.Api.XBee">
                <para>
                    
                </para>
            </param>
            <param name="remoteXbee" type="NETMF.OpenSource.XBee.Api.XBeeAddress">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Common.SaveSettings.Parse(NETMF.OpenSource.XBee.Api.AtResponse)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="response" type="NETMF.OpenSource.XBee.Api.AtResponse">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Checksum">
            <summary>
             TODO: Update comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Checksum._checksum">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Checksum.AddByte(System.Int32)">
            <summary>
            Don't add Checksum byte when computing checksum!!
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Checksum.Compute">
            <summary>
            Computes checksum and stores in checksum instance variable
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Checksum.Verify">
            <summary>
            First add all relevant bytes, including checksum
            </summary>
            <returns></returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Checksum.GetChecksum">
            <summary>
              TODO: Update Comments
                
            </summary>
            <returns>
                A byte value...
            </returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Checksum.Clear">
            <summary>
            Resets the checksum value
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Checksum.Verify(System.Byte[])">
            <summary>
            Verify that data contains valid checksum
            </summary>
            <param name="bytes">Data bytes with checksum</param>
            <returns><c>True</c> is checksum is valid, <c>false</c> otherwise</returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Checksum.Compute(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes checksum for given bytes
            </summary>
            <param name="bytes">Data bytes</param>
            <param name="offset">From where to start</param>
            <param name="count">How many bytes to include in checksum</param>
            <returns>Calculated checsum</returns>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Common.AtCmd">
            <summary>
            Common AT commands.
            </summary>
            <remarks>
            Summary descriptions of these commands are copied from Digi manuals
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.AtCmd.SerialNumberHigh">
            <summary>
            Read the high 32 bits of the module's unique 64-bit address.
            </summary>
            <remarks>
            <para>Range: 0 - 0xFFFFFFFF (read-only).</para>
            <para>Default: factory-set.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.AtCmd.SerialNumberLow">
            <summary>
            Read the low 32 bits of the module's unique 64-bit address.
            </summary>
            <remarks>
            <para>Range: 0 - 0xFFFFFFFF ƒ[read-only].</para>
            <para>Default: factory-set.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.AtCmd.NodeIdentifier">
            <summary>
            Set/Read node string identifier.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.AtCmd.NodeDiscoverTimeout">
            <summary>
            Set/Read the node discovery timeout.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.AtCmd.NodeDiscover">
            <summary>
            Discovers and reports all RF modules found.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.AtCmd.Write">
            <summary>
            Write parameter values to non-volatile memory so that parameter 
            modifications persist through subsequent power-up or reset.
            </summary>
            <remarks>
            Once WR is issued, no additional characters should be sent to the 
            module until after the response "OK\r" is received.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.AtCmd.FirmwareVersion">
            <summary>
            Read firmware version of the RF module.
            </summary>
            <remarks>
            <para>Range: 0 - 0xFFFF [read-only].</para>
            <para>Default: Factory-set.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.AtCmd.HardwareVersion">
            <summary>
            Read hardware version of the RF module.
            </summary>
            <remarks>
            Introduced in firmware v1.x80.
            <para>Range: 0 - 0xFFFF [read-only].</para>
            <para>Default: Factory-set.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.AtCmd.ApiEnable">
            <summary>
            Disable/Enable API Mode.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.AtCmd.ForceSample">
            <summary>
            Forces a read of all enabled digital and analog input lines.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.AtCmd.NetworkAddress">
            <summary>
            Read the network address of the module.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.AtCmd.RestoreDefaults">
            <summary>
            Restore module parameters to factory defaults.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.AtCmd.SoftwareReset">
            <summary>
            Reset module.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.AtCmd.NetworkReset">
            <summary>
            Reset network layer parameters.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Common.AtCmd.ApplyChanges">
            <summary>
            Applies changes to all command registers causing queued command 
            register values to be applied.
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.ErrorResponse">
            <summary>
            Represents a Java error during packet parsing.
            This is the only class that extends XBeeResponse and does not map
            to a XBee API ID
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.AddressPacketFilter">
            <summary>
             TODO: Update comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.IPacketFilter">
            <summary>
              TODO: Update Comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.IPacketFilter.Accepted(NETMF.OpenSource.XBee.Api.XBeeResponse)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="packet" type="NETMF.OpenSource.XBee.Api.XBeeResponse">
                <para>
                    
                </para>
            </param>
            <returns>
                A bool value...
            </returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.IPacketFilter.Finished">
            <summary>
              TODO: Update Comments
                
            </summary>
            <returns>
                A bool value...
            </returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.AddressPacketFilter.Accepted(NETMF.OpenSource.XBee.Api.XBeeResponse)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="packet" type="NETMF.OpenSource.XBee.Api.XBeeResponse">
                <para>
                    
                </para>
            </param>
            <returns>
                A bool value...
            </returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.AddressPacketFilter.Finished">
            <summary>
              TODO: Update Comments
                
            </summary>
            <returns>
                A bool value...
            </returns>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.AtResponseFilter">
            <summary>
             TODO: Update comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.PacketIdFilter">
            <summary>
             TODO: Update comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.PacketIdFilter.ExpectedPacketId">
            <summary>
             TODO: Update Comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.PacketIdFilter._finished">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.PacketIdFilter.#ctor(System.Int32)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="packetId" type="int">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.PacketIdFilter.#ctor(NETMF.OpenSource.XBee.Api.XBeeRequest)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="request" type="NETMF.OpenSource.XBee.Api.XBeeRequest">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.PacketIdFilter.Accepted(NETMF.OpenSource.XBee.Api.XBeeResponse)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="packet" type="NETMF.OpenSource.XBee.Api.XBeeResponse">
                <para>
                    
                </para>
            </param>
            <returns>
                A bool value...
            </returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.PacketIdFilter.Finished">
            <summary>
              TODO: Update Comments
                
            </summary>
            <returns>
                A bool value...
            </returns>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.AtResponseFilter._atCmd">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.AtResponseFilter._finished">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.AtResponseFilter.#ctor(System.UInt16,System.Int32)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="atCommand" type="ushort">
                <para>
                    
                </para>
            </param>
            <param name="packetId" type="int">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.AtResponseFilter.#ctor(NETMF.OpenSource.XBee.Api.AtCommand)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="atRequest" type="NETMF.OpenSource.XBee.Api.AtCommand">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.AtResponseFilter.Accepted(NETMF.OpenSource.XBee.Api.XBeeResponse)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="packet" type="NETMF.OpenSource.XBee.Api.XBeeResponse">
                <para>
                    
                </para>
            </param>
            <returns>
                A bool value...
            </returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.AtResponseFilter.Finished">
            <summary>
              TODO: Update Comments
                
            </summary>
            <returns>
                A bool value...
            </returns>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.AtResponseHandler">
            <summary>
            TODO: Update comments   
            </summary>
            <param name="response" type="NETMF.OpenSource.XBee.Api.AtResponse">
                <para>
                    
                </para>
            </param>
            <remarks>
                
            </remarks>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.DataPacketFilter">
            <summary>
             TODO: Update comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.DataPacketFilter.Accepted(NETMF.OpenSource.XBee.Api.XBeeResponse)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="packet" type="NETMF.OpenSource.XBee.Api.XBeeResponse">
                <para>
                    
                </para>
            </param>
            <returns>
                A bool value...
            </returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.DataPacketFilter.Finished">
            <summary>
              TODO: Update Comments
                
            </summary>
            <returns>
                A bool value...
            </returns>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.NodeDiscoveryFilter">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.NodeDiscoveryFilter.#ctor(System.Int32)">
            <summary>
            Constructor.
            TODO: Update comments    
            </summary>      
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.ResponseHandler">
            <summary>
            TODO: Update comments     
            </summary>
            <param name="response" type="NETMF.OpenSource.XBee.Api.XBeeResponse">
                <para>
                    
                </para>
            </param>
            <param name="finished" type="bool">
                <para>
                    
                </para>
            </param>
            <remarks>
                
            </remarks>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.AtRequest">
            <summary>
             TODO: Update comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.AtRequest.AtCommand">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.AtRequest.Value">
            <summary>
             TODO: Update Comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.AtRequest.#ctor(NETMF.OpenSource.XBee.XBeeApi)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="localXBee" type="NETMF.OpenSource.XBee.Api.XBee">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.AtRequest.Init(System.UInt16,System.Byte[])">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="atCommand" type="ushort">
                <para>
                    
                </para>
            </param>
            <param name="value" type="byte[]">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.AtRequest.CreateRequest">
            <summary>
              TODO: Update Comments
                
            </summary>
            <returns>
                A NETMF.OpenSource.XBee.Api.XBeeRequest value...
            </returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.AtRequest.Invoke(NETMF.OpenSource.XBee.Api.AtResponseHandler)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="responseHandler" type="NETMF.OpenSource.XBee.Api.AtResponseHandler">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.AtRequest.GetResponse">
            <summary>
              TODO: Update Comments
                
            </summary>
            <returns>
                A NETMF.OpenSource.XBee.Api.AtResponse value...
            </returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.AtRequest.GetResponsePayload">
            <summary>
              TODO: Update Comments
                
            </summary>
            <returns>
                A byte[] value...
            </returns>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.DataDelegateRequest">
            <summary>
             TODO: Update comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.DataDelegateRequest._bytesDelegate">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.DataDelegateRequest.#ctor(NETMF.OpenSource.XBee.XBeeApi)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="xbee" type="NETMF.OpenSource.XBee.Api.XBee">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.DataDelegateRequest.Init(NETMF.OpenSource.XBee.XBeeApi.PayloadDelegate)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="payloadDelegate" type="NETMF.OpenSource.XBee.Api.XBee.PayloadDelegate">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.DataDelegateRequest.Payload">
            <summary>
              TODO: Update Comments
                
            </summary>
            <value>
                <para>
                    
                </para>
            </value>
            <remarks>
                
            </remarks>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.RawRequest">
            <summary>
             TODO: Update comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.RawRequest.Request">
            <summary>
             TODO: Update Comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.RawRequest.#ctor(NETMF.OpenSource.XBee.XBeeApi)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="xbee" type="NETMF.OpenSource.XBee.Api.XBee">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.RawRequest.Init(NETMF.OpenSource.XBee.Api.XBeeRequest)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="request" type="NETMF.OpenSource.XBee.Api.XBeeRequest">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.RawRequest.CreateRequest">
            <summary>
              TODO: Update Comments
                
            </summary>
            <returns>
                A NETMF.OpenSource.XBee.Api.XBeeRequest value...
            </returns>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.GenericResponse">
            <summary>
            Container for unknown response
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.INoRequestResponse">
            <summary>
              TODO: Update Comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.IPacketListener">
            <summary>
              TODO: Update Comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.IPacketListener.ProcessPacket(NETMF.OpenSource.XBee.Api.XBeeResponse)">
            <summary>
              TODO: Update Comments
                
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.IPacketListener.GetPackets(System.Int32)">
            <summary>
              TODO: Update Comments
                
            </summary>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.IPacketListener.Finished">
            <summary>
              TODO: Update Comments
                
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.IPacketParser">
            <summary>
              TODO: Update Comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.IPacketParser.Read">
            <summary>
              TODO: Update Comments
                
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.IPacketParser.Read(System.String)">
            <summary>
              TODO: Update Comments
                
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.IPacketParser.ReadRemainingBytes">
            <summary>
              TODO: Update Comments
                
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.IPacketParser.ParseAddress16">
            <summary>
              TODO: Update Comments
                
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.IPacketParser.ParseAddress64">
            <summary>
              TODO: Update Comments
                
            </summary>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.IPacketParser.FrameDataBytesRead">
            <summary>
              TODO: Update Comments
                
            </summary>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.IPacketParser.RemainingBytes">
            <summary>
              TODO: Update Comments
                
            </summary>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.IPacketParser.BytesRead">
            <summary>
              TODO: Update Comments
                
            </summary>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.IPacketParser.Length">
            <summary>
              TODO: Update Comments
                
            </summary>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.IPacketParser.ApiId">
            <summary>
              TODO: Update Comments
                
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.ModemStatus">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ModemStatus.HardwareReset">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ModemStatus.WatchdogTimerReset">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ModemStatus.Associated">
            <summary>
            Joined network (routers and end devices)
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ModemStatus.Disassociated">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ModemStatus.SynchronizationLost">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ModemStatus.CoordinatorRealigment">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ModemStatus.CoordinatorStarted">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ModemStatus.SecurityKeyUpdated">
            <summary>
            Network security key was updated
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ModemStatus.VoltageLimitExceeded">
            <remarks>
            Voltage supply limit exceeded (PRO S2B only)
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ModemStatus.ConfigChangedWhileJoining">
            <summary>
            Modem configuration changed while join in progress
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.ModemStatus.StackError">
            <summary>
            Stack error for values 0x80+
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.ModemStatusResponse">
            <summary>
            RF module status messages are sent from the module in response to specific conditions.
            API ID: 0x8a
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Common.NodeInfo">
            <summary>
             TODO: Update comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Common.NodeInfo.#ctor">
            <summary>
              TODO: Update Comments
                
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Common.NodeInfo.#ctor(NETMF.OpenSource.XBee.Api.XBeeAddress64,NETMF.OpenSource.XBee.Api.XBeeAddress16)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="serialNumber" type="NETMF.OpenSource.XBee.Api.XBeeAddress64">
                <para>
                    
                </para>
            </param>
            <param name="networkAddress" type="NETMF.OpenSource.XBee.Api.XBeeAddress16">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Common.NodeInfo.ToString">
            <summary>
              TODO: Update Comments
                
            </summary>
            <returns>
                A string value...
            </returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Common.NodeInfo.op_Equality(NETMF.OpenSource.XBee.Api.Common.NodeInfo,System.Object)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="n1" type="NETMF.OpenSource.XBee.Api.Common.NodeInfo">
                <para>
                    
                </para>
            </param>
            <param name="n2" type="object">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Common.NodeInfo.op_Inequality(NETMF.OpenSource.XBee.Api.Common.NodeInfo,System.Object)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="n1" type="NETMF.OpenSource.XBee.Api.Common.NodeInfo">
                <para>
                    
                </para>
            </param>
            <param name="n2" type="object">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Common.NodeInfo.op_Equality(NETMF.OpenSource.XBee.Api.Common.NodeInfo,NETMF.OpenSource.XBee.Api.Common.NodeInfo)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="n1" type="NETMF.OpenSource.XBee.Api.Common.NodeInfo">
                <para>
                    
                </para>
            </param>
            <param name="n2" type="NETMF.OpenSource.XBee.Api.Common.NodeInfo">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Common.NodeInfo.op_Inequality(NETMF.OpenSource.XBee.Api.Common.NodeInfo,NETMF.OpenSource.XBee.Api.Common.NodeInfo)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="n1" type="NETMF.OpenSource.XBee.Api.Common.NodeInfo">
                <para>
                    
                </para>
            </param>
            <param name="n2" type="NETMF.OpenSource.XBee.Api.Common.NodeInfo">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Common.NodeInfo.Equals(NETMF.OpenSource.XBee.Api.Common.NodeInfo)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="other" type="NETMF.OpenSource.XBee.Api.Common.NodeInfo">
                <para>
                    
                </para>
            </param>
            <returns>
                A bool value...
            </returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Common.NodeInfo.Equals(System.Object)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="obj" type="object">
                <para>
                    
                </para>
            </param>
            <returns>
                A bool value...
            </returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Common.NodeInfo.GetHashCode">
            <summary>
              TODO: Update Comments
                
            </summary>
            <returns>
                A int value...
            </returns>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.Common.NodeInfo.NetworkAddress">
            <summary>
              TODO: Update Comments
                
            </summary>
            <value>
                <para>
                    
                </para>
            </value>
            <remarks>
                
            </remarks>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.Common.NodeInfo.SerialNumber">
            <summary>
              TODO: Update Comments
                
            </summary>
            <value>
                <para>
                    
                </para>
            </value>
            <remarks>
                
            </remarks>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.Common.NodeInfo.NodeIdentifier">
            <summary>
              TODO: Update Comments
                
            </summary>
            <value>
                <para>
                    
                </para>
            </value>
            <remarks>
                
            </remarks>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.PacketIdGenerator">
            <summary>
            Generates packet id numbers to be used with XBeeRequest.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.PacketIdGenerator.NoResponseId">
            <summary>
            XBee will not generate a TX Status Packet if this frame id sent
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.PacketIdGenerator.DefaultId">
            <summary>
            XBee will send a response to the request
            </summary>
            <remarks>
            This value is used if the value is not generated
            </remarks>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.PacketIdGenerator.GetNext">
            <summary>
            Generates an id for XBeeRequest packet.
            </summary>
            <returns>Next value in sequence between given minId and maxId</returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.PacketIdGenerator.Update(System.Byte)">
            <summary>
            Updates the packet id.
            </summary>
            <param name="newId">Any value between minId and maxId is valid</param>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.PacketParser">
            <summary>
            Reads a packet from the input stream, verifies checksum and creates an XBeeResponse object
            </summary>
            <remarks>
            Escaped bytes increase packet length but packet stated length only indicates un-escaped bytes.
            Stated length includes all bytes after Length bytes, not including the checksum
            </remarks>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.PacketParser.Read">
            <summary>
            This method reads bytes from the underlying input stream and performs the following tasks:
            1. Keeps track of how many bytes we've read
            2. Un-escapes bytes if necessary and verifies the checksum.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.PacketParser.Read(System.String)">
            <summary>
            Same as read() but logs the context of the byte being read.  useful for debugging
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.PacketParser.ReadRemainingBytes">
            <summary>
            Reads all remaining bytes except for checksum
            </summary>
            <returns></returns>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.PacketParser.FrameDataBytesRead">
            <summary>
            Returns number of bytes remaining, relative to the stated packet length (not including checksum).
            </summary>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.PacketParser.BytesRead">
            <summary>
            Does not include any escape bytes
            </summary>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.PacketParser.RemainingBytes">
            <summary>
            Number of bytes remaining to be read, including the checksum
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.RemoteAtCommand">
            <summary>
            Supported by both series 1 (10C8 firmware and later) and series 2.
            Allows AT commands to be sent to a remote radio.
            API ID: 0x17
            </summary>
            <remarks>
            Warning: this command may not return a response if the remote radio is unreachable.
            You will need to set your own timeout when waiting for a response from this command,
            or you may wait forever.
            </remarks>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.RemoteAtResponse">
            <summary>
            Supported by both series 1 (10C8 firmware and later) and series 2.
            Represents a response, corresponding to a RemoteAtCommand.
            API ID: 0x97
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.WiFi.AtCmd">
            <summary>
            TODO: Update comments   
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus">
            <summary>
            Value returned by <see cref="!:WpanAtCmd.AssociationIndication"/> command.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.Success">
            <summary>
            Coordinator successfully started or End Device association complete.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.ActiveScanTimeout">
            <summary>
            Active Scan Timeout.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.NoPan">
            <summary>
            Active Scan found no PANs.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.NoAssociation">
            <summary>
            Active Scan found PAN, but the CoordinatorAllowAssociation bit is not set.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.BeaconsNotSupported">
            <summary>
            Active Scan found PAN, but Coordinator and End Device are not configured to support beacons.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.InvalidPanId">
            <summary>
            Active Scan found PAN, but the Coordinator ID parameter does not match the ID parameter of the End Device.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.InvalidChannel">
            <summary>
            Active Scan found PAN, but the Coordinator CH parameter does not match the CH parameter of the End Device.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.EnergyScanTimeout">
            <summary>
            Energy Scan Timeout.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.StartFailed">
            <summary>
            Coordinator start request failed.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.InvalidParam">
            <summary>
            Coordinator could not start due to invalid parameter.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.RealignmentInProgress">
            <summary>
            Coordinator Realignment is in progress.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.RequestNotSent">
            <summary>
            Association Request not sent.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.RequestTimeout">
            <summary>
            Association Request timed out - no reply was received.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.RequestInvalidParam">
            <summary>
            Association Request had an Invalid Parameter.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.RequestChannelFailure">
            <summary>
            Association Request Channel Access Failure. Request was not transmitted - CCA failure.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.NoAck">
            <summary>
            Remote Coordinator did not send an ACK after Association Request was sent.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.NoReply">
            <summary>
            Remote Coordinator did not reply to the Association Request, 
            but an ACK was received after sending the request.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.SyncLost">
            <summary>
            Lost synchronization with a Beaconing Coordinator.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.Disassociated">
            <summary>
            No longer associated to Coordinator.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus.AssociationInProgress">
            <summary>
            RF Module is attempting to associate.
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Wpan.AtCmd">
            <summary>
            AT commands for IEEE® 802.15.4 RF Modules by Digi International.
            </summary>
            <remarks>
            Based on manual from Digi.
            <para>Document name: 90000982_F.</para>
            <para>Document version: 1/11/2012.</para>
            <para>Firwmare version: v1.xED.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.Write">
            <summary>
            Write parameter values to non-volatile memory so that parameter 
            modifications persist through subsequent power-up or reset.
            </summary>
            <remarks>
            Once WR is issued, no additional characters should be sent to the 
            module until after the response "OK\r" is received.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.RestoreDefaults">
            <summary>
            Restore module parameters to factory defaults.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.SoftwareReset">
            <summary>
            Responds immediately with an OK then performs 
            a hard reset ~100ms later.
            </summary>
            <remarks>
            Introduced in firmware v1.x80.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.Channel">
            <summary>
            Set/Read the channel number used for transmitting and 
            receiving data between RF modules.
            </summary>
            <remarks>
            <para>Range: 0x0B - 0x1A (XBee), 0x0C - 0x17 (XBee-PRO).</para>
            <para>Default: 0x0C (12 dec).</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.PanId">
            <summary>
            Set/Read the PAN (Personal Area Network) ID.
            </summary>
            <remarks>
            Use 0xFFFF to broadcast messages to all PANs.
            <para>Range: 0 - 0xFFFF.</para>
            <para>Default: 0x3332 (13106 dec).</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DestinationAddressHigh">
            <summary>
            Set/Read the upper 32 bits of the 64-bit destination address.
            </summary>
            <remarks>
            When combined with DL, it defines the destination address used for transmission. 
            To transmit using a 16-bit address, set DH parameter to zero and DL less than 0xFFFF.
            0x000000000000FFFF is the broadcast address for the PAN.
            <para>Range: 0 - 0xFFFFFFFF.</para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DestinationAddressLow">
            <summary>
            Set/Read the lower 32 bits of the 64-bit destination address.
            </summary>
            <remarks>
            When combined with DH, DL defines the destination address used for transmission. 
            To transmit using a 16-bit address, set DH parameter to zero and DL less than 0xFFFF. 
            0x000000000000FFFF is the broadcast address for the PAN.
            <para>Range: 0 - 0xFFFFFFFF.</para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.SourceAddress">
            <summary>
            Set/Read the RF module 16-bit source address.
            </summary>
            <remarks>
            Set MY = 0xFFFF to disable reception of packets with 16-bit addresses. 64-bit source 
            address (serial number) and broadcast address (0x000000000000FFFF) is always enabled.
            <para>Range: 0 - 0xFFFF.</para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.SerialNumberHigh">
            <summary>
            Read high 32 bits of the RF module's unique IEEE 64-bit address.
            </summary>
            <remarks>
            64-bit source address is always enabled.
            <para>Range: 0 - 0xFFFFFFFF (read-only).</para>
            <para>Default: factory-set.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.SerialNumberLow">
            <summary>
            Read low 32 bits of the RF module's unique IEEE 64-bit address.
            </summary>
            <remarks>
            64-bit source address is always enabled.
            <para>Range: 0 - 0xFFFFFFFF (read-only).</para>
            <para>Default: factory-set.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.XBeeRetries">
            <summary>
            Set/Read the maximum number of retries the module will execute in
            addition to the 3 retries provided by the 802.15.4 MAC.
            </summary>
            <remarks>
            For each XBee retry, the 802.15.4 MAC can execute up to 3 retries.
            Introduced in firmware v1.xA0.
            <para>Range: 0 - 6.</para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.RandomDelaySlots">
            <summary>
            Set/Read the minimum value of the back-off exponent in the CSMA-CA 
            algorithm that is used for collision avoidance.
            </summary>
            <remarks>
            If RN = 0, collision avoidance is disabled during the first iteration 
            of the algorithm (802.15.4 - macMinBE).
            <para>Range: 0 - 3 (exponent).</para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.MacMode">
            <summary>
            Set/Read MAC Mode value. MAC Mode enables/disables the
            use of a Digi header in the 802.15.4 RF packet.
            </summary>
            <remarks>
            When Modes 1 or 3 are enabled (MM=1,3), duplicate packet detection is enabled 
            as well as certain AT commands.Please see the detailed MM description 
            on page 47 for additional information. Introduced in firmware v1.x80.
            <para>Range: 
            0 (Digi Mode), 
            1 (802.15.4 no ACKs), 
            2 (802.15.4 with ACKs), 
            3 = (Digi Mode no ACKs)
            </para>
            <para>Default: 0</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.NodeIdentifier">
            <summary>
            Set/Read node string identifier.
            </summary>
            <remarks>
            The register only accepts printable ASCII data. In AT Command Mode, a string 
            can not start with a space. A carriage return ends the command. Command will 
            automatically end when maximum bytes for the string have been entered. 
            This string is returned as part of the <see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.NodeDiscover"/> command. 
            This identifier is also used with the <see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DestinationNode"/> command. 
            Introduced in firmware v1.x80.
            <para>Range: 20-character ASCII string.</para>
            <para>Default: empty.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.NodeDiscover">
            <summary>
            Discover and report all RF modules found.
            </summary>
            <remarks>
            After (<see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.NodeDiscoverTime"/> * 100) milliseconds, the command ends 
            by returning a carrage return. <see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.NodeDiscover"/> also accepts a 
            <see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.NodeIdentifier"/> as a parameter (optional). In this case, only a module 
            that matches the supplied identifier will respond. If <see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.NodeDiscover"/> 
            is sent through the API, each response is returned as a separate response. 
            The data consists of the above listed bytes without the carriage return delimiters. 
            The <see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.NodeIdentifier"/> string will end in a "0x00" null character. 
            The radius of the <see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.NodeDiscover"/> command is set by the <see cref="!:BroadcastHops"/> command. 
            Introduced in firmware v1.x80.
            <para>Range: optional 20-character NI value.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.NodeDiscoverTime">
            <summary>
            Set/Read the node discovery timeout.
            </summary>
            <remarks>
            When the network discovery (<see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.NodeDiscover"/>) command is issued, 
            the <see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.NodeDiscoverTime"/> value is included in the transmission to
            provide all remote devices with a response timeout. Remote devices wait a random
            time, less than NT, before sending their response. Introduced in firmware v1.xA0.
            <para>Range: 0x01 - 0xFC (x 100 ms).</para>
            <para>Default: 0x19 (25 dec).</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.NetworkDiscoveryOptions">
            <summary>
            Enables node discover self-response on the module.
            </summary>
            <remarks>
            Introduced in firmware v1xC5.
            <para>Range: 0 - 1.</para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DestinationNode">
            <summary>
            Resolves an <see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.NodeIdentifier"/> string to a physical address.
            </summary>
            <remarks>
            The following events occur upon successful command execution. <see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DestinationAddressHigh"/> 
            and <see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DestinationAddressLow"/> are set to the address of the module with 
            the matching <see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.NodeIdentifier"/>. "OK" is returned. RF module automatically exits 
            AT Command Mode. If there is no response from a module within 200 msec or a parameter is not specified
            (left blank), the command is terminated and an "ERROR" message is returned. 
            Introduced in firmware v1.x80.
            <para>Range: 20-character ASCII string.</para>
            <para>Default: empty.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.CoordinatorEnable">
            <summary>
            Set/Read the coordinator setting.
            </summary>
            <remarks>
            Introduced in firmware v1.x80.
            <para>Range: 0 (End Device), 1 (Coordinator).</para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.ScanChannels">
            <summary>
            Set/Read list of channels to scan for all Active and Energy Scans as a bitfield.
            </summary>
            <remarks>
            This affects scans initiated in command mode (AS, ED) and during End Device Association 
            and Coordinator startup. Introduced in firmware v1.x80.
            <para>Range: 0 - 0xFFFF [bitfield] (bits 0, 14, 15 not allowed on the XBee-PRO)</para>
            <para>Default: 0x1FFE (all XBee-PRO Channels)</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.ScanDuration">
            <summary>
            Set/Read the scan duration exponent.
            </summary>
            <remarks>
            Time equals to (2 ^ SD) * 15.36ms. Introduced in firmware v1.x80.
            <para>End Device - Duration of Active Scan during Association.</para>
            <para>Coordinator - If ReassignPANID option is set on Coordinator (refer to A2 parameter),
            SD determines the length of time the Coordinator will scan channels to locate existing
            PANs. If ReassignChannel option is set, SD determines how long the Coordinator will
            perform an Energy Scan to determine which channel it will operate on. Scan Time is measured 
            as (# of channels to scan] * (2 ^ SD) * 15.36ms). The number of channels to scan is set 
            by the <see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.ScanChannels"/> command. The XBee can scan up to 16 channels. 
            The XBee PRO can scan up to 13 channels.</para>
            <para>Range: 0 - 0x0F [exponent].</para>
            <para>Default: 4.</para>
            </remarks>
            <example>
            The values below show results for a 13 channel scan:
            <list type="bullet">
            <item><term>SD = 0</term><description>time = 0.18 sec</description></item>
            <item><term>SD = 2</term><description>time = 0.74 sec</description></item>
            <item><term>SD = 4</term><description>time = 2.95 sec</description></item>
            <item><term>SD = 6</term><description>time = 11.80 sec</description></item>
            <item><term>SD = 8</term><description>time = 47.19 sec</description></item>
            <item><term>SD = 10</term><description>time = 3.15 min</description></item>
            <item><term>SD = 12</term><description>time = 12.58 min</description></item>
            <item><term>SD = 14</term><description>time = 50.33 min</description></item>
            </list>
            </example>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.EndDeviceAssociation">
            <summary>
            Set/Read End Device association options.
            </summary>
            <remarks>
            Introduced in firmware v1.x80.
            <list type="bullet">
            <item>
            <term>bit 0 - ReassignPanIDƒ</term>
            <description>
            0 - Will only associate with Coordinator operating on PAN ID that matches module IDƒ. 
            1 - May associate with Coordinator operating on any PAN ID.
            </description>
            </item>
            <item>
            <term>bit 1 - ReassignChannel</term>
            <description>
            0 - Will only associate with Coordinator operating on matching CH Channel settingƒn. 
            1 - May associate with Coordinator operating on any Channel.
            </description>
            </item>
            <item>
            <term>bit 2 - AutoAssociateƒ</term>
            <description>
            0 - Device will not attempt Association. 
            1 - Device attempts Association until success. 
            This bit is used only for Non-Beacon systems. 
            End Devices in Beacon-enabled system must always associate to a Coordinator.
            </description>
            </item>
            <item>
            <term>bit 3 - PollCoordOnPinWake</term>
            <description>
            0 - Pin Wake will not poll the Coordinator for indirect (pending) data. 
            1 - Pin Wake will send Poll Request to Coordinator to extract any pending data bits 4 - 7 are reserved.
            </description>
            </item>
            </list>
            <para>Range: 0 - 0x0F [bitfield].</para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.CoordinatorAssociation">
            <summary>
            Set/Read Coordinator association options.
            </summary>
            <remarks>
            Introduced in firmware v1.x80.
            <list type="bullet">
            <item>
            <term>bit 0 - ReassignPanIDƒ</term>
            <description>
            0 - Coordinator will not perform Active Scan to locate available PAN ID. It will operate on ID (PAN ID). 
            1 - Coordinator will perform Active Scan to determine an available ID (PAN ID). If a PAN ID conflict 
            is found, the ID parameter will change.
            </description>
            </item>
            <item>
            <term>bit 1 - ReassignChannel</term>
            <description>
            0 - Coordinator will not perform Energy Scan to determine free channel. It will operate on the channel 
            determined by the <see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.Channel"/> parameter. 
            1 - Coordinator will perform Energy Scan to find a free channel, then operate on that channel.
            </description>
            </item>
            <item>
            <term>bit 2 - AllowAssociationƒ</term>
            <description>
            0 - Coordinator will not allow any devices to associate to it. 
            1 - Coordinator will allow devices to associate to it.
            </description>
            </item>
            <item>
            <term>bits 3 - 7</term>
            <description>Reserved.</description>
            </item>
            </list>
            <para>Range: 0 - 7 [bitfield].</para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.AssociationIndication">
            <summary>
            Read errors with the last association request.
            </summary>
            <remarks>
            Introduced in firmware v1.x80.
            <para>Range: 0 - 0x13 [read-only].</para>
            </remarks>
            <returns><see cref="T:NETMF.OpenSource.XBee.Api.Wpan.AssociationStatus"/></returns>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.ForceDisassociation">
            <summary>
            End Device will immediately disassociate from a Coordinator 
            (if associated) and reattempt to associate.
            </summary>
            <remarks>
            Introduced in firmware v1.x80.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.ForcePool">
            <summary>
            Request indirect messages being held by a coordinator.
            </summary>
            <remarks>
            Introduced in firmware v1.x80
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.ActiveScan">
            <summary>
            Send Beacon Request to Broadcast Address (0xFFFF) and Broadcast PAN (0xFFFF) on every channel.
            </summary>
            <remarks>
            The parameter determines the time the radio will listen for Beacons on each channel. 
            A PanDescriptor is created and returned for every Beacon received from the scan. 
            The Active Scan is capable of returning up to 5 PanDescriptors in a scan. 
            The actual scan time on each channel is measured as Time = [(2 ^SD PARAM) * 15.36] ms. 
            Note the total scan time is this time multiplied by the number of channels to be scanned 
            (16 for the XBee and 13 for the XBee-PRO). Also refer to <see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.ScanDuration"/> command description. 
            Introduced in firmware v1.x80.
            <para>Range: 0 - 6.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.EnergyScan">
            <summary>
            Send an Energy Detect Scan.
            </summary>
            <remarks>
            The parameter determines the length of scan on each channel. The maximal energy on each channel 
            is returned and each value is followed by a carriage return. Values returned represent detected 
            energy levels in units of -dBm. Actual scan time on each channel is measured as Time = [(2 ^ SD) * 15.36] ms. 
            Total scan time is this time multiplied by the number of channels to be scanned. Introduced in firmware v1.x80
            <para>Range: 0 - 6.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.AesEncryptionEnable">
            <summary>
            Disable/Enable 128-bit AES encryption support. 
            Use in conjunction with the <see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.AesEncryptionKey"/> command.
            </summary>
            <remarks>
            Introduced in firmware v1.xA0.
            <para>Range: 0 - 1.</para>
            <para>Default: 0 (disabled).</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.AesEncryptionKey">
            <summary>
            Set the 128-bit AES (Advanced Encryption Standard) key for encrypting/decrypting data. 
            The <see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.AesEncryptionKey"/> register cannot be read.
            </summary>
            <remarks>
            Introduced in firmware v1.xA0
            <para>Range: 0 - (any 16-Byte value).</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.PowerLevel">
            <summary>
            Select/Read the power level at which the RF module transmits conducted power.
            </summary>
            <remarks>
            <para>Range: 0 - 4.</para>
            <para>Default: 4.</para>
            </remarks>
            <returns><see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.PowerLevel"/></returns>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.CcaThreshold">
            <summary>
            Set/read the CCA (Clear Channel Assessment) threshold.
            </summary>
            <remarks>
            Prior to transmitting a packet, a CCA is performed to detect energy on the channel. 
            If the detected energy is above the CCA Threshold, the module will not transmit the packet.
            Introduced in firmware v1.x80
            <para>Range: 0x24 - 0x50 [-dBm].</para>
            <para>Default: 0x2C (-44 dBm).</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.SleepMode">
            <summary>
            SM.
            <para>Set/Read Sleep Mode configurations.</para>
            </summary>
            <remarks>
            <para>Range: 0 - 5.</para>
            <para>Default: 0.</para>
            </remarks>
            <returns><see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.SleepMode"/></returns>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.SleepOptions">
            <summary>
            Set/Read the sleep mode options.
            </summary>
            <remarks>
            <list type="bullet">
            <item><term>Bit 0 - Poll wakeup disable.</term>
            <description>
            0 - Normal operations. A module configured for cyclic sleep will poll for data on waking. 
            1 - Disable wakeup poll. A module configured for cyclic sleep will not poll for data on waking.
            </description></item>
            <item><term>Bit 1 - ADC/DIO wakeup sampling disable.</term>
            <description>
            0 - Normal operations. A module configured in a sleep mode with ADC/DIO sampling enabled will 
            automatically perform a sampling on wakeup. 1 - Suppress sample on wakeup. A module configured 
            in a sleep mode with ADC/DIO sampling enabled will not automatically sample on wakeup.
            </description></item>
            </list>
            <para>Range: 0 - 4.</para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.TimeBeforeSleep">
            <summary>
            Set/Read time period of inactivity (no serial or RF data 
            is sent or received) before activating Sleep Mode
            </summary>
            <remarks>
            ST parameter is only valid with Cyclic Sleep settings (<see cref="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.SleepMode"/> = 4 - 5).
            Coordinator and End Device ST values must be equal.
            Also note, the GT parameter value must always be less than the ST value. (If GT &gt; ST,
            the configuration will render the module unable to enter into command mode.) 
            If the ST parameter is modified, also modify the GT parameter accordingly.
            <para>Range: 1 - 0xFFFF [x 1 ms].</para>
            <para>Default: 0x1388 (5000 dec).</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.CyclicSleepPeriod">
            <summary>
            Set/Read sleep period for cyclic sleeping remotes.
            </summary>
            <remarks>
            Coordinator and End Device SP values should always be equal. 
            To send Direct Messages, set SP = 0.
            <para>
            End Device - SP determines the sleep period for cyclic sleeping remotes. 
            Maximum sleep period is 268 seconds (0x68B0).
            </para>
            <para>
            Coordinator - If non-zero, SP determines the time to hold an indirect message before
            discarding it. A Coordinator will discard indirect messages after a period of (2.5 * SP).
            </para>
            <para>Range: 0 - 0x68B0 [x 10 ms].</para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DisassociatedCyclicSleepPeriod">
            <summary>
            Set/Read time period of sleep for cyclic sleeping remotes that are 
            configured for Association but are not associated to a Coordinator.
            </summary>
            <remarks>
            If a device is configured to associate, configured as a Cyclic Sleep remote, 
            but does not find a Coordinator, it will sleep for DP time before reattempting association. 
            Maximum sleepperiod is 268 seconds (0x68B0). DP should be > 0 for NonBeacon systems.
            Introduced in firmware v1.x80.
            <para>Range: 0 - 0x68B0 [x 10 ms].</para>
            <para>Default: 0x3E8 (1000 dec).</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.InterfaceDataRate">
            <summary>
            Set/Read the serial interface data rate for communication between
            the module serial port and host.
            </summary>
            <remarks>
            Request non-standard baud rates with values above 0x80 using a terminal window. 
            Read the BD register to find actual baud rate achieved.
            <para>Range: 
            0 - 7 (standard baud rates), 
            0x80 (non-standard baud rates up to 250 Kbps).
            </para>
            <para>Default: 3 (9600 Kbps).</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.PacketizationTimeout">
            <summary>
            Set/Read number of character times of inter-character delay required before transmission.
            </summary>
            <remarks>
            Set to zero to transmit characters as they arrive instead of buffering them into one RF packet.
            <para>Range: 0 - 0xFF [x character times]</para>
            <para>Default: 3.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.ApiEnable">
            <summary>
            Disable/Enable API Mode.
            </summary>
            <remarks>
            Introduced in firmware v1.x80.
            <para>Range: 0-2.</para>
            <para>Default: 0 (Disabled).</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.Parity">
            <summary>
            Set/Read parity settings.
            </summary>
            <remarks>
            <para>Range: 0 - 4.</para>
            <para>Default: 0 (8-bit no parity).</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.PullUpResistorEnable">
            <summary>
            Set/Read bitfield to configure internal pull-up resistor status for I/O lines.
            </summary>
            <remarks>
            Bit set to '1' specifies pull-up enabled, '0' specifies no pull-up.
            Bitfield Map:
            bit 0 - AD4/DIO4 (pin11)
            bit 1 - AD3 / DIO3 (pin17)
            bit 2 - AD2/DIO2 (pin18)
            bit 3 - AD1/DIO1 (pin19)
            bit 4 - AD0 / DIO0 (pin20)
            bit 5 - RTS / AD6 / DIO6 (pin16)
            bit 6 - DTR / SLEEP_RQ / DI8 (pin9)
            bit 7 - DIN/CONFIG (pin3)
            Introduced in firmware v1.x80.
            <para>Range: 0 - 0xFF.</para>
            <para>Default: 0xFF.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DIO8Config">
            <summary>
            Select/Read options for the DI8 line (pin 9) of the RF module.
            </summary>
            <remarks>
            <para>Range: 0 (Disabled), 3 (DI).</para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DIO7Config">
            <summary>
            Select/Read settings for the DIO7 line (pin 12) of the RF module.
            </summary>
            <remarks>
            Options include CTS flow control and I/O line settings.
            Introduced in firmware v1.x80.
            <para>Range: 
            0 (Disabled), 
            1 (CTS Flow Controlƒ), 
            3 (DI), 
            4 (DO low), 
            5 (DO high), 
            6 (RS485 Tx Enable Low), 
            7 (RS485 Tx Enable High).
            </para>
            <para>Default: 1.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DIO6Config">
            <summary>
            Select/Read settings for the DIO6 line (pin 16) of the RF module.
            </summary>
            <remarks>
            Options include RTS flow control and I/O line settings.
            Introduced in firmware v1.x80.
            <para>Range: 
            0 (Disabled), 
            1 (RTS Flow Controlƒ), 
            3 (DI), 
            4 (DO low), 
            5 (DO high).
            </para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DIO5Config">
            <summary>
            Configure settings for the DIO5 line (pin 15) of the RF module.
            </summary>
            <remarks>
            Options include Associated LED indicator (blinks when associated) and I/O line settings.
            Introduced in firmware v1.x80.
            <para>Range: 
            0 (Disabled), 
            1 (Associated indicatorƒ), 
            2 (ADC), 
            3 (DI), 
            4 (DO low), 
            5 (DO high).
            </para>
            <para>Default: 1.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DIO4Config">
            <summary>
            Select/Read settings for the AD4/DIO4 (pin 11).
            </summary>
            <remarks>
            Options include: Analog-to-digital converter, Digital Input and Digital Output.
            Introduced in firmware v1.xA0.
            <para>Range: 
            0 (Disabled), 
            2 (ADC), 
            3 (DI), 
            4 (DO low), 
            5 (DO high).
            </para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DIO3Config">
            <summary>
            Select/Read settings for the AD3/DIO3 (pin 17).
            </summary>
            <remarks>
            Options include: Analog-to-digital converter, Digital Input and Digital Output.
            Introduced in firmware v1.xA0.
            <para>Range: 
            0 (Disabled), 
            2 (ADC), 
            3 (DI), 
            4 (DO low), 
            5 (DO high).
            </para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DIO2Config">
            <summary>
            Select/Read settings for the AD2/DIO2 (pin 18).
            </summary>
            <remarks>
            Options include: Analog-to-digital converter, Digital Input and Digital Output.
            Introduced in firmware v1.xA0.
            <para>Range: 
            0 (Disabled), 
            2 (ADC), 
            3 (DI), 
            4 (DO low), 
            5 (DO high).
            </para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DIO1Config">
            <summary>
            Select/Read settings for the AD1/DIO1 (pin 19).
            </summary>
            <remarks>
            Options include: Analog-to-digital converter, Digital Input and Digital Output.
            Introduced in firmware v1.xA0.
            <para>Range: 
            0 (Disabled), 
            2 (ADC), 
            3 (DI), 
            4 (DO low), 
            5 (DO high).
            </para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DIO0Config">
            <summary>
            Select/Read settings for the AD0/DIO0 (pin 20).
            </summary>
            <remarks>
            Options include: Analog-to-digital converter, Digital Input and Digital Output.
            Introduced in firmware v1.xA0.
            <para>Range: 
            0 (Disabled), 
            2 (ADC), 
            3 (DI), 
            4 (DO low), 
            5 (DO high).
            </para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.IOOutputEnable">
            <summary>
            Disables/Enables I/O data received to be sent out UART.
            </summary>
            <remarks>
            The data is sent using an API frame regardless of the current AP parameter value.
            Introduced in firmware v1.xA0.
            <para>Range: 0 (Disabled), 1 (Enabled).</para>
            <para>Default: 1.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.SamplesBeforeTx">
            <summary>
            Set/Read the number of samples to collect before transmitting data.
            </summary>
            <remarks>
            Maximum number of samples is dependent upon the number of enabled inputs.
            Introduced in firmware v1.xA0.
            <para>Range: 1 - 0xFF.</para>
            <para>Default: 1.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.ForceSample">
            <summary>
            Force a read of all enabled inputs (DI or ADC). Data is returned through the UART.
            </summary>
            <remarks>
            If no inputs are defined (DI or ADC), this command will return error.
            Introduced in firmware v1.xA0.
            <para>Range: 8-bit map (each bit represents the level of an I/O line setup as an output).</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DigitalOutputLevel">
            <summary>
            Set digital output level to allow DIO lines that are setup as 
            outputs to be changed through Command Mode.
            </summary>
            <remarks>
            Introduced in firmware v1.xA0.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DIOChangeDetect">
            <summary>
            Set/Read bitfield values for change detect monitoring.
            </summary>
            <remarks>
            Each bit enables monitoring of DIO0 - DIO7 for changes. If detected, data is transmitted with 
            DIO data only. Any samples queued waiting for transmission will be sent first.
            Introduced in firmware v1.xA0.
            <para>Range: 0 - 0xFF [bitfield].</para>
            <para>Default: 0 (disabled).</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.SampleRate">
            <summary>
            Set/Read sample rate.
            </summary>
            <remarks>
            When set, this parameter causes the module to sample all enabled inputs at a specified interval.
            Introduced in firmware v1.xA0.
            <para>Range: 0 - 0xFFFF [x 1 msec].</para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.IOInputAddress">
            <summary>
            Set/Read addresses of module to which outputs are bound.
            </summary>
            <remarks>
            Setting all bytes to 0xFF will not allow any received I/O packet to change outputs. 
            Setting address to 0xFFFF will allow any received I/O packet to change outputs.
            Introduced in firmware v1.xA0.
            <para>Range: 0 - 0xFFFFFFFFFFFFFFFF.</para>
            <para>Default: 0xFFFFFFFFFFFFFFFF.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DIO0OutputTimeout">
            <summary>
            Set/Read Output timeout values for corresponding digital line.
            </summary>
            <remarks>
            When output is set (due to I/O line passing) to a nondefault level, a timer is started which when 
            expired will set the output to it default level. The timer is reset when a valid I/O packet is received.
            Introduced in firmware v1.xA0.
            <para>Range: 0 - 0xFF [x 100 ms].</para>
            <para>Default: 0xFF.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DIO1OutputTimeout">
            <summary>
            Set/Read Output timeout values for corresponding digital line.
            </summary>
            <remarks>
            When output is set (due to I/O line passing) to a nondefault level, a timer is started which when 
            expired will set the output to it default level. The timer is reset when a valid I/O packet is received.
            Introduced in firmware v1.xA0.
            <para>Range: 0 - 0xFF [x 100 ms].</para>
            <para>Default: 0xFF.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DIO2OutputTimeout">
            <summary>
            Set/Read Output timeout values for corresponding digital line.
            </summary>
            <remarks>
            When output is set (due to I/O line passing) to a nondefault level, a timer is started which when 
            expired will set the output to it default level. The timer is reset when a valid I/O packet is received.
            Introduced in firmware v1.xA0.
            <para>Range: 0 - 0xFF [x 100 ms].</para>
            <para>Default: 0xFF.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DIO3OutputTimeout">
            <summary>
            Set/Read Output timeout values for corresponding digital line.
            </summary>
            <remarks>
            When output is set (due to I/O line passing) to a nondefault level, a timer is started which when 
            expired will set the output to it default level. The timer is reset when a valid I/O packet is received.
            Introduced in firmware v1.xA0.
            <para>Range: 0 - 0xFF [x 100 ms].</para>
            <para>Default: 0xFF.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DIO4OutputTimeout">
            <summary>
            Set/Read Output timeout values for corresponding digital line.
            </summary>
            <remarks>
            When output is set (due to I/O line passing) to a nondefault level, a timer is started which when 
            expired will set the output to it default level. The timer is reset when a valid I/O packet is received.
            Introduced in firmware v1.xA0.
            <para>Range: 0 - 0xFF [x 100 ms].</para>
            <para>Default: 0xFF.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DIO5OutputTimeout">
            <summary>
            Set/Read Output timeout values for corresponding digital line.
            </summary>
            <remarks>
            When output is set (due to I/O line passing) to a nondefault level, a timer is started which when 
            expired will set the output to it default level. The timer is reset when a valid I/O packet is received.
            Introduced in firmware v1.xA0.
            <para>Range: 0 - 0xFF [x 100 ms].</para>
            <para>Default: 0xFF.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DIO6OutputTimeout">
            <summary>
            Set/Read Output timeout values for corresponding digital line.
            </summary>
            <remarks>
            When output is set (due to I/O line passing) to a nondefault level, a timer is started which when 
            expired will set the output to it default level. The timer is reset when a valid I/O packet is received.
            Introduced in firmware v1.xA0.
            <para>Range: 0 - 0xFF [x 100 ms].</para>
            <para>Default: 0xFF.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.DIO7OutputTimeout">
            <summary>
            Set/Read Output timeout values for corresponding digital line.
            </summary>
            <remarks>
            When output is set (due to I/O line passing) to a nondefault level, a timer is started which when 
            expired will set the output to it default level. The timer is reset when a valid I/O packet is received.
            Introduced in firmware v1.xA0.
            <para>Range: 0 - 0xFF [x 100 ms].</para>
            <para>Default: 0xFF.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.PWM0Config">
            <summary>
            Select/Read function for PWM0 pin.
            </summary>
            <remarks>
            <para>Range: 0 (Disabled), 1 (RSSI), 2 (PWM Output).</para>
            <para>Default: 1.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.PWM1Config">
            <summary>
            Select/Read function for PWM0 pin.
            </summary>
            <remarks>
            Introduced in firmware v1.xA0.
            <para>Range: 0 (Disabled), 1 (RSSI), 2 (PWM Output).</para>
            <para>Default: 0.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.PWM0OutputLevel">
            <summary>
            Set/Read the PWM 0 output level.
            </summary>
            <remarks>
            Introduced in firmware v1.xA0.
            <para>Range: 0 - 0x03FF.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.PWM1OutputLevel">
            <summary>
            Set/Read the PWM 1 output level.
            </summary>
            <remarks>
            Introduced in firmware v1.xA0.
            <para>Range: 0 - 0x03FF.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.PWMOutputTimeout">
            <summary>
            Set/Read output timeout value for both PWM outputs.
            </summary>
            <remarks>
            When PWM is set to a non-zero value: Due to I/O line passing, a time is started which when 
            expired will set the PWM output to zero. The timer is reset when a valid I/O packet is received.
            Introduced in firmware v1.xA0.
            <para>Range: 0 - 0xFF [x 100 ms].</para>
            <para>Default: 0xFF.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.RssiPwmTimer">
            <summary>
            Set/Read PWM timer register.
            </summary>
            <remarks>
            Set the duration of PWM (pulse width modulation) signal output on the RSSI pin. 
            The signal duty cycle is updated with each received packet and is shut off when the timer expires.
            <para>Range: 0 - 0xFF [x 100 ms].</para>
            <para>Default: 0x28 (40 dec).</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.FirmwareVersion">
            <summary>
            Read firmware version of the RF module.
            </summary>
            <remarks>
            <para>Range: 0 - 0xFFFF [read-only].</para>
            <para>Default: Factory-set.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.FirmwareVersionVerbose">
            <summary>
            Read detailed version information (including application build date, MAC, PHY and bootloader versions).
            </summary>
            <remarks>
            Introduced in firmware v1.x80. It has been deprecated in version 10C9. 
            It is not supported in firmware versions after 10C8.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.HardwareVersion">
            <summary>
            Read hardware version of the RF module.
            </summary>
            <remarks>
            Introduced in firmware v1.x80.
            <para>Range: 0 - 0xFFFF [read-only].</para>
            <para>Default: Factory-set.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.ReceivedSignalStrength">
            <summary>
            Read signal level [in dB] of last good packet received (RSSI).
            </summary>
            <remarks>
            Absolute value is reported. (For example: 0x58 = -88 dBm) Reported value 
            is accurate between -40 dBm and RX sensitivity.
            <para>Range: 0x17-0x5C (XBee), 0x24-0x64 (XBee-PRO) [read-only].</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.CcaFailures">
            <summary>
            Reset/Read count of CCA (Clear Channel Assessment) failures.
            </summary>
            <remarks>
            This parameter value increments when the module does not transmit a packet because it
            detected energy above the CCA threshold level set with CA command. This count saturates 
            at its maximum value. Set count to "0" to reset count. Introduced in firmware v1.x80.
            <para>Range: 0 - 0xFFFF.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.AckFailures">
            <summary>
            EC.
            <para>Reset/Read count of acknowledgment failures.</para>
            </summary>
            <remarks>
            This parameter value increments when the module expires its transmission retries without 
            receiving an ACK on a packet transmission. This count saturates at its maximum value. 
            Set the parameter to "0" to reset count. Introduced in firmware v1.x80.
            <para>Range: 0 - 0xFFFF.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.CommandModeTimeout">
            <summary>
            Set/Read the period of inactivity (no valid commands received) 
            after which the RF module automatically exits AT Command Mode and returns
            to Idle Mode.
            </summary>
            <remarks>
            <para>Range: 2 - 0xFFFF [x 100 ms].</para>
            <para>Default: 0x64 (100 dec).</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.ExitCommandMode">
            <summary>
            Explicitly exit the module from AT Command Mode.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.ApplyChanges">
            <summary>
            Explicitly apply changes to queued parameter value(s) and reinitialize module.
            </summary>
            <remarks>
            Introduced in firmware v1.xA0.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.GuardTimes">
            <summary>
            Set required period of silence before and after the Command Sequence
            Characters of the AT Command Mode Sequence (GT+ CC + GT).
            </summary>
            <remarks>
            The period of silence is used to prevent inadvertent entrance into AT Command Mode.
            <para>Range: 2 - 0x0CE4 [x 1 ms].</para>
            <para>Default: 0x3E8 (1000 dec).</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.AtCmd.CommandSequenceCharacter">
            <summary>
            Set/Read the ASCII character value to be used between Guard Times of the AT Command Mode Sequence (GT+CC+GT).
            </summary>
            <remarks>
            The AT Command Mode Sequence enters the RF module into AT Command Mode.
            <para>Range: 0 - 0xFF.</para>
            <para>Default: 0x2B ('+' in ASCII).</para>
            </remarks>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Wpan.IoSampleResponse">
            <summary>
            Series 1 XBee. Represents an I/O sample
            </summary>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.Wpan.IoSampleResponse.ChannelIndicator">
            <summary>
            Defines which inputs are active.
            </summary>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.Wpan.IoSampleResponse.ContainsDigital">
            <summary>
            Returns true if this packet contains at least one digital sample
            </summary>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.Wpan.IoSampleResponse.ContainsAnalog">
            <summary>
            Return true if this packet contains at least one analog sample
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Wpan.IWpanPacket">
            <summary>
              TODO: Update Comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Wpan.Pin">
            <summary>
             TODO: Update comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.Pin.DigitalCount">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.Pin.AnalogCount">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.Pin.Digital.D0">
            <summary>
            AD0 / DIO0. Pin #20.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.Pin.Digital.D1">
            <summary>
            AD1 / DIO1. Pin #19.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.Pin.Digital.D2">
            <summary>
            AD2 / DIO2. Pin #18.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.Pin.Digital.D3">
            <summary>
            AD3 / DIO3 / (COORD_SEL). Pin #17.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.Pin.Digital.D4">
            <summary>
            AD4 / DIO4. Pin #11.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.Pin.Digital.D5">
            <summary>
            AD5 / DIO5 / (ASSOCIATE). Pin #15.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.Pin.Digital.D6">
            <summary>
            DIO6 / (RTS). Pin #16.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.Pin.Digital.D7">
            <summary>
            DIO6 / (CTS). Pin #12.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.Pin.Digital.D8">
            <summary>
            DI8 / (DTR) / (Sleep_RQ). Pin #9.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.Pin.Analog.A0">
            <summary>
            AD0 / DIO0. Pin #20.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.Pin.Analog.A1">
            <summary>
            AD1 / DIO1. Pin #19.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.Pin.Analog.A2">
            <summary>
            AD2 / DIO2. Pin #18.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.Pin.Analog.A3">
            <summary>
            AD3 / DIO3 / (COORD_SEL). Pin #17.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.Pin.Analog.A4">
            <summary>
            AD4 / DIO4. Pin #11.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.Pin.Analog.A5">
            <summary>
            AD5 / DIO5 / (ASSOCIATE). Pin #15.
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Wpan.PowerLevel">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.PowerLevel.Level0">
            <summary>
            -10/10 dBm (-3 dB for XBee-PRO International variant).
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.PowerLevel.Level1">
            <summary>
            -6/12 dBm (-3 dB for XBee-PRO International variant).
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.PowerLevel.Level2">
            <summary>
            -4/14 dBm (2 dB for XBee-PRO International variant).
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.PowerLevel.Level3">
            <summary>
            -2/16 dBm (8 dB for XBee-PRO International variant).
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.PowerLevel.Level4">
            <summary>
            0/18 dBm (10 dB for XBee-PRO International variant).
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Wpan.RxResponse">
            <summary>
            Series 1 XBee.  
            Common elements of 16 and 64 bit Address Receive packets.
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Wpan.IoSample">
            <summary>
            Provides access to XBee's 8 Digital (0-7) and 6 Analog (0-5) IO pins.
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Wpan.IoSample.GetValue(NETMF.OpenSource.XBee.Api.Wpan.Pin.Analog)">
            <summary>
            Get A/D reading.
            </summary>
            <param name="pin">Analog pin</param>
            <returns>Reading in mV</returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Wpan.IoSample.GetValue(NETMF.OpenSource.XBee.Api.Wpan.Pin.Digital)">
            <summary>
            Get digital pin state.
            </summary>
            <param name="pin">Digital pin</param>
            <returns>Returns <c>true</c> if low, <c>false</c> if high.</returns>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Wpan.SleepMode">
            <summary>
            Value returned by <see cref="!:WpanAtCmd.SleepMode"/> command.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.SleepMode.NoSleep">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.SleepMode.PinHibernate">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.SleepMode.PinDoze">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.SleepMode.CyclicSleepRemote">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.SleepMode.CyclicSleepRemoteWithPinWakeUp">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.SleepMode.SleepCoordinator">
            <summary>
            For backwards compatibility with firmware v1.x6 only. 
            Use <see cref="!:WpanAtCmd.CoordinatorEnable"/> command.
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Wpan.TxRequest">
            <summary>
            Series 1 XBee.
            Class for 16 and 64 bit address Transmit packets.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Wpan.TxRequest.MaxPayloadSize">
            <summary>
            Maximum payload size as specified in the series 1 XBee manual.
            This is provided for reference only and is not used for validation
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Wpan.TxStatusResponse">
            <summary>
            When a TX Request is completed, the module sends a TX Status message. 
            This message will indicate if the packet was transmitted successfully or if there was a failure.
            API Identifier Value: 0x89
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Wpan.DiscoverResult">
            <summary>
            Series 1 XBee.
            Parses a Node Discover (ND) AT Command Response
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.XBeeAddress16">
            <summary>
            Represents a 16-bit XBee Address.
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.XBeeAddress64">
            <summary>
            Represents a 64-bit XBee Address
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.XBeeAddress64.#ctor(System.String)">
            <summary>
            Parses an 64-bit XBee address from a string representation
            </summary>
            <param name="addressStr">
            Don't use '0x' prefix. Allowed formats:
            <c>0000000000000000</c>
            <c>00 00 00 00 00 00 00 00</c>
            </param>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.XBeeConfiguration">
            <summary>
            Holds basic information about XBee module and allows to set it's properties using AT commands.
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.XBeeConfiguration.Read(NETMF.OpenSource.XBee.XBeeApi)">
            <summary>
            Reads module basic information
            </summary>
            <param name="xbee">XBee module to read data from</param>
            <returns>XBee basic information</returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.XBeeConfiguration.Read(NETMF.OpenSource.XBee.XBeeApi,NETMF.OpenSource.XBee.Api.XBeeAddress)">
            <summary>
            Reads remote module basic information
            </summary>
            <param name="sender">XBee module that will send AT command to remote target</param>
            <param name="remoteXbee">XBee module which infomation will be retrieved</param>
            <returns>Remote XBee basic infomation</returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.XBeeConfiguration.Save">
            <summary>
            Saves changes permanently in module flash memory.
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.XBeePacket">
            <summary>
            Packages a frame data array into an XBee packet.
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.XBeePacket.GetBytes(NETMF.OpenSource.XBee.Api.XBeeRequest)">
            <summary>
            Performs the necessary activities to construct an XBee packet from the frame data.
            This includes: computing the checksum, escaping the necessary bytes, adding the start byte and length bytes.
            The format of a packet is as follows:
            start byte - msb length byte - lsb length byte - frame data - checksum byte
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.XBeePacket.EscapePacket(System.Byte[])">
            <summary>
            Escape all bytes in packet after start byte, and including checksum
            </summary>
            <param name="packet"></param>
            <returns></returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.XBeePacket.Verify(System.Byte[])">
            <summary>
            Returns true if the packet is valid
            </summary>
            <param name="packet"></param>
            <returns> true if the packet is valid</returns>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.XBeeParseException">
            <summary>
             TODO: Update comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.XBeeParseException.#ctor(System.String)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="message" type="string">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.XBeeTimeoutException">
            <summary>
             TODO: Update comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Zigbee.AssociationStatus">
            <summary>
            Association Status  
            </summary>
            <remarks>
            TODO: Update  comments    
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AssociationStatus.Success">
            <summary>
            Successfully formed or joined a network. 
            </summary>
            <remarks>
            Coordinators form a network, routers and end devices join a network.
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AssociationStatus.NoPan">
            <summary>
            Scan found no PANs
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AssociationStatus.NoValidPan">
            <summary>
            Scan found no valid PANs based on current SC and ID settings.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AssociationStatus.NodeJoiningExpired">
            <summary>
            Valid Coordinator or Routers found, but they are not allowing joining (NJ expired).
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AssociationStatus.NoJoinableBeacons">
            <summary>
            No joinable beacons were found.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AssociationStatus.UnexpectedState">
            <summary>
            Node should not be attempting to join at this time.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AssociationStatus.JoiningFailed">
            <summary>
            Node Joining attempt failed (typically due to incompatible security settings).
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AssociationStatus.CoordinatorStartFailed">
            <summary>
            Coordinator Start attempt failed.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AssociationStatus.CheckingForCoordinator">
            <summary>
            Checking for an existing coordinator.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AssociationStatus.FailedToLeaveNetwork">
            <summary>
            Attempt to leave the network failed.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AssociationStatus.FailedToJoinDevice">
            <summary>
            Attempted to join a device that did not respond.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AssociationStatus.ReceivedUnsecuredKey">
            <summary>
            Network security key received unsecured.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AssociationStatus.KeyNotReceived">
            <summary>
            Network security key not received.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AssociationStatus.MissingKey">
            <summary>
            Joining device does not have the right preconfigured link key.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AssociationStatus.ScanningInProgress">
            <summary>
            Scanning for a ZigBee network (routers and end devices).
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd">
            <summary>
            AT commands for ZigBee RF Modules by Digi International.
            </summary>
            <remarks>
            Based on manual from Digi.
            <para>Document name: 90000976_J.</para>
            <para>Document version: January 2012.</para>
            <para>Firwmare version: 2x7x.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.DestinationAddressHigh">
            <summary>
            Set/Read the upper 32 bits of the 64-bit destination address.
            </summary>
            <remarks>
            When combined with DL, it defines the destination address used for transmission. 
            To transmit using a 16-bit address, set DH parameter to zero and DL less than 0xFFFF. 
            Special definitions for DH and DL include 0x000000000000FFFF (broadcast) and 
            0x0000000000000000 (coordinator).
            <para>Range: 0 - 0xFFFFFFFF.</para>
            <para>Default: 0.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.DestinationAddressLow">
            <summary>
            Set/Read the lower 32 bits of the 64-bit destination address.
            </summary>
            <remarks>
            When combined with DH, DL defines the destination address used for transmission. 
            To transmit using a 16-bit address, set DH parameter to zero and DL less than 0xFFFF. 
            Special definitions for DH and DL include 0x000000000000FFFF (broadcast) and 
            0x0000000000000000 (coordinator).
            <para>Range: 0 - 0xFFFFFFFF.</para>
            <para>Default: 0xFFFF(Coordinator), 0 (Router/End Device).</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.NetworkAddress">
            <summary>
            Read the 16-bit network address of the module.
            </summary>
            <remarks>
            A value of 0xFFFE means the module has not joined a ZigBee network.
            <para>Range: 0 - 0xFFFEƒ [read-only].</para>
            <para>Default: 0xFFFE.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.ParentAddress">
            <summary>
            Read the 16-bit network address of the module's parent.
            </summary>
            <remarks>
            A value of 0xFFFE means the module does not have a parent.
            <para>Range: 0 - 0xFFFEƒ [read-only].</para>
            <para>Default: 0xFFFE.</para>
            <para>Applicable: End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.NumberOfRemainingChildren">
            <summary>
            Read the number of end device children that can join the device.
            </summary>
            <remarks>
            If NC returns 0, then the device cannot allow any more end device children to join.
            <para>Range: 0 - MAX_CHILDREN (maximum varies).</para>
            <para>Default: read-only.</para>
            <para>Applicable: Coordinator, Router.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.SerialNumberHigh">
            <summary>
            Read the high 32 bits of the module's unique 64-bit address.
            </summary>
            <remarks>
            <para>Range: 0 - 0xFFFFFFFF ƒ[read-only].</para>
            <para>Default: factory-set.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.SerialNumberLow">
            <summary>
            Read the low 32 bits of the module's unique 64-bit address.
            </summary>
            <remarks>
            <para>Range: 0 - 0xFFFFFFFF ƒ[read-only].</para>
            <para>Default: factory-set.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.NodeIdentifier">
            <summary>
            Set/read a string identifier.
            </summary>
            <remarks>
            The register only accepts printable ASCII data. 
            In AT Command Mode, a string cannot start with a space. 
            A carriage return ends the command. 
            A command will automatically end when maximum bytes for the string have been entered. 
            This string is returned as part of the ND (Node Discover) command. 
            This identifier is also used with the DN (Destination Node) command. 
            In AT command mode, an ASCII comma (0x2C) cannot be used in the NI string.
            <para>Range: 20-Byte printable ƒASCII string.</para>
            <para>Default: ASCII space character (0x20).</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.SourceEndpoint">
            <summary>
            Set/read the ZigBee application layer source endpoint value.
            </summary>
            <remarks>
            This value will be used as the source endpoint for all data transmissions. 
            SE is only supported in AT firmware. 
            The default value 0xE8 (Data endpoint) is the Digi data endpoint.
            <para>Range: 0 - 0xFF.</para>
            <para>Default: 0xE8.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.DestinationEndpoint">
            <summary>
            Set/read Zigbee application layer destination ID value.
            </summary>
            <remarks>
            This value will be used as the destination endpoint all data transmissions. 
            DE is only supported in AT firmware. 
            The default value (0xE8) is the Digi data endpoint.
            <para>Range: 0 - 0xFF.</para>
            <para>Default: 0xE8.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.ClusterIdentifier">
            <summary>
            Set/read Zigbee application layer cluster ID value.
            </summary>
            <remarks>
            This value will be used as the cluster ID for all data transmissions. 
            CI is only supported in AT firmware. 
            The default value0x11 (Transparent data cluster ID).
            <para>Range: 0 - 0xFFFF.</para>
            <para>Default: 0x11.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.MaxRFPayloadBytes">
            <summary>
            This value returns the maximum number of RF payload bytes that can be sent in a unicast transmission.
            </summary>
            <remarks>
            If APS encryption is used (API transmit option bit enabled), the maximum payload size is reduced by 9 bytes. 
            If source routing is used (AR less than 0xFF), the maximum payload size is reduced further. 
            Note: NP returns a hexadecimal value. (e.g. if NP returns 0x54, this is equivalent to 84 bytes). 
            <para>Range: 0 - 0xFFFF.</para>
            <para>Default: [read-only].</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.DeviceTypeIdentifier">
            <summary>
            Stores a device type value.
            </summary>
            <remarks>
            This value can be used to differentiate different XBee-based devices. 
            Digi reserves the range 0 - 0xFFFFFF.
            <para>Range: 0 - 0xFFFFFFFF.</para>
            <para>Default: 0x30000.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
            <returns><see cref="T:NETMF.OpenSource.XBee.Api.Zigbee.DeviceType"/></returns>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.OperatingChannel">
            <summary>
            Set/Read the channel number used for transmitting and receiving data between RF modules.
            </summary>
            <remarks>
            Uses 802.15.4 channel numbers. A value of 0 means the device 
            has not joined a PAN and is not operating on any channel.
            <para>Range: 
            XBee 0, 0x0B - 0x1A (Channels 11-26),
            XBee-PRO (S2) 0, 0x0B - 0x18 (Channels 11-24), 
            XBee-PRO (S2B) 0, 0x0B - 0x19 (Channels 11-25).
            </para>
            <para>Default: [read-only].</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.ForceDisassociation">
            <summary>
            End device will immediately disassociate from a Coordinator (if associated) and reattempt to associate.
            </summary>
            <remarks>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.ExtendedPanId">
            <summary>
            Set/read the 64-bit extended PAN ID.
            </summary>
            <remarks>
            If set to 0, the coordinator will select a random extended PAN ID, 
            and the router / end device will join any extended PAN ID. 
            Changes to ID should be written to non-volatile memory using the 
            WR command to preserve the ID setting if a power cycle occurs.
            <para>Range: 0 - 0xFFFFFFFFFFFFFFFF.</para>
            <para>Default: 0.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.OperatingExtendedPanId">
            <summary>
            Read the 64-bit extended PAN ID.
            </summary>
            <remarks>
            The OP value reflects the operating extended PAN ID that the module is running on. 
            If ID > 0, OP will equal ID.
            <para>Range: 0x01 - 0xFFFFFFFFFFFFFFFF.</para>
            <para>Default: [read-only].</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.MaximumUnicastHops">
            <summary>
            Set / read the maximum hops limit.
            </summary>
            <remarks>
            This limit sets the maximum broadcast hops value (BH) and determines the unicast timeout. 
            The timeout is computed as (50 * NH) + 100 ms. The default unicast timeout of 1.6 seconds 
            (NH=0x1E) is enough time for data and the acknowledgment to traverse about 8 hops.
            <para>Range: 0 - 0xFF.</para>
            <para>Default: 0x1E.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.BroadcastHops">
            <summary>
            Set/Read the maximum number of hops for each broadcast data transmission.
            </summary>
            <remarks>
            Setting this to 0 will use the maximum number of hops.
            <para>Range: 0 - 0xFF.</para>
            <para>Default: 0x1E.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.OperatingPanId">
            <summary>
            Read the 16-bit PAN ID.
            </summary>
            <remarks>
            The OI value reflects the actual 16-bit PAN ID the module is running on.
            <para>Range: 0 - 0xFFFF.</para>
            <para>Default: [read-only].</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.NodeDiscoverTimeout">
            <summary>
            Set/Read the node discovery timeout.
            </summary>
            <remarks>
            When the network discovery (ND) command is issued, the NT value is included 
            in the transmission to provide all remote devices with a response timeout. 
            Remote devices wait a random time, less than NT, before sending their response.
            <para>Range: 0x20 - 0xFF [x 100 msec].</para>
            <para>Default: 0x3C (60 dec).</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.NetworkDiscoveryOptions">
            <summary>
            Set/Read the options value for the network discovery command.
            </summary>
            <remarks>
            The options bitfield value can change the behavior of the ND (network 
            discovery) command and/or change what optional values are returned in any received 
            ND responses or API node identification frames. Options include: 
            0x01 = Append DD value (to ND responses or API node identification frames), 
            002 = Local device sends ND response frame when ND is issued.
            <para>Range: 0 - 0x03 [bitfield].</para>
            <para>Default: 0.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.ScanChannels">
            <summary>
            Set/Read bit field list of channels to scan.
            </summary>
            <remarks>
            Changes to SC should be written using WR command to preserve the SC setting if a power cycle occurs.
            <para>Coordinator - Bit field list of channels to choose from prior to starting network.</para>
            <para>Router/End Device - Bit field list of channels that will be scanned to find a Coordinator/Router to join.</para>
            <para>Range: 
            XBee 1 - 0xFFFF [bitfield], 
            XBee-PRO (S2) 1 - 0x3FFF [bitfield] (bits 14, 15 not allowed), 
            XBee-PRO (S2B) 1-0x7FFF (bit 15 is not allowed).
            </para>
            <para>Default: 1FFE.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.ScanDuration">
            <summary>
            Set/Read the scan duration exponent.
            </summary>
            <remarks>
            Scan Time is measured as: (# Channels to Scan) * (2 ^ SD) * 15.36ms - The number of 
            channels to scan is determined by the SC parameter. The XBee can scan up to 16 channels 
            (SC = 0xFFFF). Changes to SD should be written using WR command. 
            <para>Coordinator - Duration of the Active and Energy Scans (on each channel) that are 
            used to determine an acceptable channel and Pan ID for the Coordinator to startup on.ƒ</para>
            <para>Router / End Device - Duration of Active Scan (on each channel) used to locate an 
            available Coordinator / Router to join during Association.</para>
            <para>Note: SD influences the time the MAC listens for beacons or runs an energy scan on a 
            given channel. The SD time is not a good estimate of the router/end device joining time 
            requirements. ZigBee joining adds additional overhead including beacon processing on 
            each channel, sending a join request, etc. that extend the actual joining time.</para>
            <para>Range: 0 - 7 [exponent].</para>
            <para>Default: 3.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.ZigBeeStackProfile">
            <summary>
            Set / read the ZigBee stack profile value.
            </summary>
            <remarks>
            This must be set the same on all devices that should join the same network.
            <para>Range: 0 - 2.</para>
            <para>Default: 0.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.NodeJoinTime">
            <summary>
            Set/Read the time that a Coordinator/Router allows nodes to join.
            </summary>
            <remarks>
            This value can be changed at run time without requiring a Coordinator or Router to
            restart. The time starts once the Coordinator or Router has started. The timer is reset
            on power-cycle or when NJ changes.
            <para>For an end device to enable rejoining, NJ should be set less than 0xFF on the device 
            that will join. If NJ is less then 0xFF, the device assumes the network is not allowing joining and 
            first tries to join a network using rejoining. If multiple rejoining attempts fail, or if 
            NJ=0xFF, the device will attempt to join using association.</para>
            <para>Note: Setting the NJ command will not cause the radio to broadcast the new value of 
            NJ out to the network via a Mgmt_Permit_Joining_req; this value is transmitted by setting CB=2. 
            See the command description for CB for more information.</para>
            <para>Range: 0 - 0xFF ƒ[x 1 sec].</para>
            <para>Default: 0xFF ƒ(always allows joining).</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.ChannelVerification">
            <summary>
            Set/Read the channel verification parameter.
            </summary>
            <remarks>
            If JV=1, a router will verify the coordinator is on its operating channel when joining or coming up from a
            power cycle. If a coordinator is not detected, the router will leave its current channel and
            attempt to join a new PAN. If JV=0, the router will continue operating on its current
            channel even if a coordinator is not detected.
            <para>Range: 0 (disabled), 1 (enabled).</para>
            <para>Default: 0.</para>
            <para>Applicable: Router.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.NetworkWatchdogTimeout">
            <summary>
            Set/read the network watchdog timeout value.
            </summary>
            <remarks>
            If NW is set greater than 0, the router will monitor communication from the coordinator (or data collector) 
            and leave the network if it cannot communicate with the coordinator for 3 NW periods. 
            The timer is reset each time data is received from or sent to a coordinator, or if a manyto-one broadcast is received.
            <para>Range: 0 - 0x64FF [x 1 minute] (up to over 17 days).</para>
            <para>Default: 0 (disabled).</para>
            <para>Applicable: Router.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.JoinNotification">
            <summary>
            Set / read the join notification setting.
            </summary>
            <remarks>
            If enabled, the module will transmit a broadcast node identification packet on power up and when joining. 
            This action blinks the Associate LED rapidly on all devices that receive the transmission, and
            sends an API frame out the UART of API devices. This feature should be disabled for large networks to 
            prevent excessive broadcasts.
            <para>Range: 0 - 1.</para>
            <para>Default: 0.</para>
            <para>Applicable: Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.AggregateRoutingNotification">
            <summary>
            Set/read time between consecutive aggregate route broadcast messages.
            </summary>
            <remarks>
            If used, AR may be set on only one device to enable many-to-one routing to the device. 
            Setting AR to 0 only sends one broadcast. AR is in units of 10 seconds.
            <para>Range: 0 - 0xFF.</para>
            <para>Default: 0xFF.</para>
            <para>Applicable: Coordinator, Router.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.DisableJoining">
            <summary>
            Setting this register to 1 will disable the device from joining.
            </summary>
            <remarks>
            This setting is not writeable (WR) and will reset to zero after a power cycle.
            <para>Range: 1 (enabled).</para>
            <para>Default: 0 [not writeable].</para>
            <para>Applicable: Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.InitialId">
            <summary>
            This register determines the operating 16-bit PAN ID for the network.
            </summary>
            <remarks>
            Changing this value will cause the Coordinator to leave the network and form another. 
            A setting of 0xFFFF allows the system to choose its own 16 bit 802.15.4 PAN Identifier. 
            This setting is not writeable (WR) and will reset to 0xFFFF after a power cycle.
            <para>Range: 0x0000 - 0xFFFF.</para>
            <para>Default: 0xFFFF [not writeable].</para>
            <para>Applicable: Coordinator.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.EncryptionEnable">
            <summary>
            Set/Read the encryption enable setting.
            </summary>
            <remarks>
            <para>Range: 0 (disabled), 1 (enabled).</para>
            <para>Default: 0.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.EncryptionOptions">
            <summary>
            Options for encryption.
            </summary>
            <remarks>
            Unused option bits should be set to 0. Options include: 
            0x01 - Send the security key unsecured over-the-air during joins, 
            0x02 - Use trust center (coordinator only).
            <para>Range: 0 - 0xFF.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.EncryptionKey">
            <summary>
            Set the 128-bit AES network encryption key.
            </summary>
            <remarks>
            This command is write-only; NK cannot be read. If set to 0 (default), 
            the module will select a random network key. 
            <para>Range: 128-bit value.</para>
            <para>Default: 0.</para>
            <para>Applicable: Coordinator.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.LinkKey">
            <summary>
            Set the 128-bit AES link key.
            </summary>
            <remarks>
            This command is write only; KY cannot be read. Setting KY to 0 will cause the 
            coordinator to transmit the network key in the clear to joining devices, 
            and will cause joining devices to acquire the network key in the clear when joining.
            <para>Range: 128-bit value.</para>
            <para>Default: 0.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.PowerLevel">
            <summary>
            Select/Read the power level at which the RF module transmits conducted power.
            </summary>
            <remarks>
            For XBee-PRO (S2B) Power Level 4 is calibrated and the other power levels are approximate. 
            For XBee (S2), onlythe default power level (PL=4) is guaranteed from -40 to 85° C.
            <para>Range: 0-4.</para>
            <para>Default: 4.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.PowerMode">
            <summary>
            Set/read the power mode of the device.
            </summary>
            <remarks>
            Enabling boost mode will improve the receive sensitivity by 1dB 
            and increase the transmit power by 2dB. 
            <para>Note: Enabling boost mode on the XBee-PRO will not affect the output power. Boost
            mode imposes a slight increase in current draw. See section 1.2 for details.</para>
            <para>Range: 0 (boos mode disabled), 1 (boost mode enabled).</para>
            <para>Default: 1.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.ReceivedSignalStrength">
            <summary>
            This command reports the received signal strength of the last received RF data packet.
            </summary>
            <remarks>
            The DB command only indicates the signal strength of the last hop. 
            It does not provide an accurate quality measurement for a multihop link. 
            DB can be set to 0 to clear it. The DB command value is measured in -dBm. 
            As of 2x6x firmware, the DB command value is also updated when an APS acknowledgment is received.
            Observed values for XBee-PRO: 0x1A - 0x58, XBee: 0x 1A - 0x5C.
            <para>Range: 0 - 0xFF.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
            <example>
            If DB returns 0x50, then the RSSI of the last packet received was -80dBm.
            </example>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.PeakPower">
            <summary>
            Read the dBm output when maximum power is selected (PL4).
            </summary>
            <remarks>
            Enabling boost mode will improve the receive sensitivity by 1dB 
            and increase the transmit power by 2dB. 
            <para>Note: Enabling boost mode on the XBee-PRO will not affect the output power. Boost
            mode imposes a slight increase in current draw. See section 1.2 for details.</para>
            <para>Range: 0x00 - 0x12.</para>
            <para>Default: [read only].</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.ApiEnable">
            <summary>
            Enable API Mode.
            </summary>
            <remarks>
            The AP command is only supported when using API firmware: 21xx (API coordinator), 23xx (API router), 29xx (API end device).
            <para>Range: 1 (enabled), 2 (enabled w/escaped control characters).</para>
            <para>Default: 1.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.ApiOptions">
            <summary>
            Configure options for API.
            </summary>
            <remarks>
            Current options select the type of receive API frame to send out the Uart for received RF data packets.
            <para>Range: 
            0 (default receive API indicators enabled), 
            1 (explicit Rx data indicator API frame enabled (0x91)), 
            3 (enable ZDO passthrough of ZDO requests to the UART which are not supported by the stack, 
            as well as Simple_Desc_req, Active_EP_req, and Match_Desc_req).
            </para>
            <para>Default: 0.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.InterfaceDataRate">
            <summary>
            Set/Read the serial interface data rate for communication between the module serial port and host.
            </summary>
            <remarks>
            Any value above 0x07 will be interpreted as an actual baud rate. When a value above 0x07 is sent, the closest
            interface data rate represented by the number is stored in the BD register.
            <para>Range: 
            0 - 7 (standard baud rates), 
            0x80 - 0xE1000 (non-standard baud rates up to 921 Kbps).
            </para>
            <para>Default: 3 (9600 Kbps).</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.SerialParity">
            <summary>
            Set/Read the serial parity setting on the module.
            </summary>
            <remarks>
            <para>Range: 
            0 = No parity 
            1 = Even parity 
            2 = Odd parity 
            3 = Mark parity.
            </para>
            <para>Default: 0 (No parity).</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.StopBits">
            <summary>
            Set/read the number of stop bits for the UART.
            </summary>
            <remarks>
            Two stop bits are not supported if mark parity is enabled.
            <para>Range: 0 (1 stop bit), 1 (2 stop bits).</para>
            <para>Default: 0 (1 stop bit).</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.PacketizationTimeout">
            <summary>
            Set/Read number of character times of inter-character silence required before packetization.
            </summary>
            <remarks>
            Set (RO=0) to transmit characters as they arrive instead of buffering them into one RF packet The RO 
            command is only supported when using AT firmware: 20xx (AT coordinator), 22xx (AT router), 28xx (AT end device).
            <para>Range: 0 - 0xFF [x character times].</para>
            <para>Default: 3.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.DIO7Config">
            <summary>
            Select/Read options for the DIO7 line of the RF module.
            </summary>
            <remarks>
            Options include CTS flow control and I/O line settings.
            Introduced in firmware v1.x80.
            <para>Range: 
            0 (Disabled), 
            1 (CTS Flow Controlƒ), 
            3 (Digital input), 
            4 (Digital output low), 
            5 (Digital output high), 
            6 (RS-485 transmit enable - low enable), 
            7 (RS-485 tranmist enable - high enable).
            </para>
            <para>Default: 1.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.DIO6Config">
            <summary>
            Configure options for the DIO6 line of the RF module.
            </summary>
            <remarks>
            Options include RTS flow control and I/O line settings.
            Introduced in firmware v1.x80.
            <para>Range: 
            0 (Disabled), 
            1 (RTS Flow Controlƒ), 
            3 (Digital input), 
            4 (Digital output low), 
            5 (Digital output high).
            </para>
            <para>Default: 0.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.SampleRate">
            <summary>
            Set/Read the IO sample rate to enable periodic sampling.
            </summary>
            <remarks>
            For periodic sampling to be enabled, IR must be set to a non-zero value, 
            and at least one module pin must have analog or digital IO functionality 
            enabled (see D0-D8, P0-P2 commands). The sample rate is measured in milliseconds.
            <para>Range: 0, 0x32 - 0xFFFF (ms).</para>
            <para>Default: 0.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.DIOChangeDetect">
            <summary>
            Set/Read the digital IO pins to monitor for changes in the IO state.
            </summary>
            <remarks>
            IC works with the individual pin configuration commands (D0-D8, P0-P2). 
            If a pin is enabled as a digital input/output, the IC command can be used to force 
            an immediate IO sample transmission when the DIO state changes. IC is a bitmask 
            that canbe used to enable or disable edge detection on individual channels. 
            Unused bits should be set to 0.
            <para>Range: 0 - 0xFFFF.</para>
            <para>Default: 0.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.PWM0Config">
            <summary>
            Select/Read function for PWM0.
            </summary>
            <remarks>
            <para>Range: 
            0 (Disabled), 
            1 (RSSI PWM), 
            3 (Digital input, monitored), 
            4 (Digital output, default low), 
            5 (Digital output, default high).
            </para>
            <para>Default: 1.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.DIO11Config">
            <summary>
            Configure options for the DIO11 line of the RF module.
            </summary>
            <remarks>
            <para>Range: 
            0 (Unmonitored digital input),  
            3 (Digital input, monitored), 
            4 (Digital output, default low), 
            5 (Digital output, default high).
            </para>
            <para>Default: 0.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.DIO12Config">
            <summary>
            Configure options for the DIO12 line of the RF module.
            </summary>
            <remarks>
            <para>Range: 
            0 (Unmonitored digital input),  
            3 (Digital input, monitored), 
            4 (Digital output, default low), 
            5 (Digital output, default high).
            </para>
            <para>Default: 0.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.DIO13Config">
            <summary>
            Set/Read function for DIO13.
            </summary>
            <remarks>
            This command is not yet supported.
            <para>Range: 
            0 (Disabled),  
            3 (Digital input), 
            4 (Digital output, low), 
            5 (Digital output, high).
            </para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.DIO0Config">
            <summary>
            Select/Read function for AD0/DIO0.
            </summary>
            <remarks>
            <para>Range: 
            1 (Commissioning button enabled), 
            2 (Analog input, single ended), 
            3 (Digital input), 
            4 (Digital output, low), 
            5 (Digital output, high).
            </para>
            <para>Default: 1.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.DIO1Config">
            <summary>
            Select/Read function for AD1/DIO1.
            </summary>
            <remarks>
            <para>Range: 
            0 (Disabled), 
            2 (Analog input, single ended), 
            3 (Digital input), 
            4 (Digital output, low), 
            5 (Digital output, high).
            </para>
            <para>Default: 0.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.DIO2Config">
            <summary>
            Select/Read function for AD2/DIO2.
            </summary>
            <remarks>
            <para>Range: 
            0 (Disabled), 
            2 (Analog input, single ended), 
            3 (Digital input), 
            4 (Digital output, low), 
            5 (Digital output, high).
            </para>
            <para>Default: 0.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.DIO3Config">
            <summary>
            Select/Read function for AD3/DIO3.
            </summary>
            <remarks>
            <para>Range: 
            0 (Disabled), 
            2 (Analog input, single ended), 
            3 (Digital input), 
            4 (Digital output, low), 
            5 (Digital output, high).
            </para>
            <para>Default: 0.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.DIO4Config">
            <summary>
            Select/Read function for DIO4.
            </summary>
            <remarks>
            <para>Range: 
            0 (Disabled), 
            3 (Digital input), 
            4 (Digital output, low), 
            5 (Digital output, high).
            </para>
            <para>Default: 0.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.DIO5Config">
            <summary>
            Configure options for the DIO5 line of the RF module.
            </summary>
            <remarks>
            <para>Range: 
            0 (Disabled), 
            1 (Associated indication LED), 
            3 (Digital input), 
            4 (Digital output, default low), 
            5 (Digital output, default high).
            </para>
            <para>Default: 1.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.DIO8Config">
            <summary>
            Set/Read function for DIO8.
            </summary>
            <remarks>
            This command is not yet supported.
            <para>Range: 
            0 (Disabled), 
            3 (Digital input), 
            4 (Digital output, default low), 
            5 (Digital output, default high).
            </para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.AssociateLedBlinkTime">
            <summary>
            Set/Read the Associate LED blink time.
            </summary>
            <remarks>
            If the Associate LED functionality is enabled (D5 command), this value determines 
            the on and off blink times for the LED when the module has joined a network. 
            If LT=0, the default blink rate will be used (500ms coordinator, 250ms router/end device). 
            For all other LT values, LT is measured in 10ms.
            <para>Range: 0, 0x0A - 0xFF (100 - 2550 ms).</para>
            <para>Default: 0.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.PullUpResistor">
            <summary>
            Set/Read bitfield to configure internal pull-up resistor status for I/O lines.
            </summary>
            <remarks>
            Bit set to '1' specifies pull-up enabled, '0' specifies no pull-up. 30k pull-up resistors.
            <para>Range: 0 - 0x3FFF.</para>
            <para>Default: 0 - 0x1FFF.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.RssiPwmTimer">
            <summary>
            Time the RSSI signal will be output on the PWM after the last RF data 
            reception or APS acknowledgment.
            </summary>
            <remarks>
            When RP = 0xFF, output will always be on.
            <para>Range: 0 - 0xFF [x 100 ms].</para>
            <para>Default: 0x28 (40 dec).</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.SupplyVoltage">
            <summary>
            Reads the voltage on the Vcc pin.
            </summary>
            <remarks>
            Scale by 1200/1024 to convert to mV units. 
            <para>Range: 0x00 - 0xFFFF [read only].</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
            <example>
            A %V reading of 0x900 (2304 decimal) represents 2700mV or 2.70V.
            </example>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.VoltageSupplyMonitoring">
            <summary>
            The voltage supply threshold is set with the V+ command.
            </summary>
            <remarks>
            If the measured supply voltage falls below or equal to this threshold, the supply voltage 
            will be included in the IO sample set. V+ is set to 0 by default (do not include the 
            supply voltage). Scale mV units by 1024/1200 to convert to internal units. 
            Given the operating Vcc ranges for different platforms, and scaling by 1024/1200, 
            the useful parameter ranges are: 
            XBee 2100-3600 mV 0,0x0700-0x0c00, 
            PRO 3000-3400 mV, 0,0x0a00-0x0b55, 
            S2B 2700-3600 mV, 0,0x0900-0x0c00.
            <para>Range: 0-0xFFFF.</para>
            <para>Default: 0.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
            <example>
            For example, for a 2700mV threshold enter 0x900.
            </example>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.Temperature">
            <summary>
            Reads the module temperature in Degrees Celsius.
            </summary>        
            <remarks>
            Accuracy +/- 7 degrees. 
            1° C = 0x0001 and -1° C = 0xFFFF. 
            Command is only available in PRO S2B.
            <para>Range: 0x0 - 0xFFFF.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.FirmwareVersion">
            <summary>
            Read firmware version of the module.
            </summary>
            <remarks>
            The firmware version returns 4 hexadecimal values (2 bytes) "ABCD". 
            Digits ABC are the main release number and D is the revision number from the main release. 
            "B" is a variant designator. 
            XBee and XBee-PRO ZB modules return: 0x2xxx versions. 
            XBee and XBee-PRO ZNet modules return: 0x1xxx versions. 
            ZNet firmware is not compatible with ZB firmware.
            <para>Range: 0 - 0xFFFF [read-only].</para>
            <para>Default: Factory-set.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.HardwareVersion">
            <summary>
            Read the hardware version of the module.version of the module.
            </summary>
            <remarks>
            This command can be used to distinguish among different hardware platforms. 
            The upper byte returns a value that is unique to each module type. 
            The lower byte indicates the hardware revision. XBee ZB and XBee ZNet 
            modules return the following (hexadecimal) values:
            0x19xx - XBee module, 
            0x1Axx - XBee-PRO module.
            <para>Range: 0 - 0xFFFF [read-only].</para>
            <para>Default: Factory-set.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.AssociationIndication">
            <summary>
            Read information regarding last node join request.
            </summary>
            <remarks>
            New non-zero AI values may be added in later firmware versions. 
            Applications should read AI until it returns 0x00, indicating 
            a successful startup (coordinator) or join (routers and end devices)
            <para>Range: 0 - 0xFF [read-only].</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
            <returns><see cref="T:NETMF.OpenSource.XBee.Api.Zigbee.AssociationStatus"/></returns>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.CommandModeTimeout">
            <summary>
            Set/Read the period of inactivity (no valid commands received) after which 
            the RF module automatically exits AT Command Mode and returns to Idle Mode.
            </summary>
            <remarks>
            <para>Range: 2 - 0x028F [x 100 ms].</para>
            <para>Default: 0x64 (100 dec).</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.ExitCommandMode">
            <summary>
            Explicitly exit the module from AT Command Mode.
            </summary>
            <remarks>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.GuardTimes">
            <summary>
            Set required period of silence before and after the Command Sequence
            Characters of the AT Command Mode Sequence (GT+ CC + GT).
            </summary>
            <remarks>
            The period of silence is used to prevent inadvertent entrance into AT Command Mode.
            <para>Range: 2 - 0x0CE4 [x 1 ms] (max of 3.3 decimal sec).</para>
            <para>Default: 0x3E8 (1000 dec).</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.CommandSequenceCharacter">
            <summary>
            Set/Read the ASCII character value to be used between Guard Times of the 
            AT Command Mode Sequence (GT+CC+GT).
            </summary>
            <remarks>
            The AT Command Mode Sequence enters the RF module into AT Command Mode. 
            The CC command is only supported when using AT firmware: 20xx (AT coordinator), 
            22xx (AT router), 28xx (AT end device).
            <para>Range: 0 - 0xFF.</para>
            <para>Default: 0x2B ('+' in ASCII).</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.SleepMode">
            <summary>
            Sets the sleep mode on the RF module.
            </summary>
            <remarks>
            An XBee loaded with router firmware can be configured as either a router (SM set to 0) 
            or an end device (SM > 0). Changing a device from a router to an end device (or vice versa) 
            forces the device to leave the network and attempt to join as the new device type when 
            changes are applied.
            <para>Range: 
            0 - Sleep disabled (router), 
            1 - Pin sleep enabled, 
            4 - Cyclic sleep enabled, 
            5 - Cyclic sleep, pin wake.
            </para>
            <para>Default: 0 (Router), 4 (End Device).</para>
            <para>Applicable: Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.NumberOfSleepPeriods">
            <summary>
            Sets the number of sleep periods to not assert the On/Sleep
            pin on wakeup if no RF data is waiting for the end device.
            </summary>
            <remarks>
            This command allows a host application to sleep for an extended time if no RF data is present.
            <para>Range: 1 - 0xFFFF.</para>
            <para>Default: 1.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.SleepPeriod">
            <summary>
            This value determines how long the end device will sleep at a time, up to 28 seconds.
            </summary>
            <remarks>
            The sleep time can effectively be extended past 28 seconds using the SN
            command. On the parent, this value determines how long the parent will buffer a
            message for the sleeping end device. It should be set at least equal to the longest SP
            time of any child end device.
            <para>Range: 0x20 - 0xAF0 x 10ms (Quarter second resolution).</para>
            <para>Default: 0x20.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.TimeBeforeSleep">
            <summary>
            Sets the time before sleep timer on an end device.
            </summary>
            <remarks>
            The timer is reset each time serial or RF data is received. Once the timer expires, 
            an end device may enter low power operation. Applicable for cyclic sleep end devices only.
            <para>Range: 1 - 0xFFFE (x 1ms).</para>
            <para>Default: 0x1388 (5 seconds).</para>
            <para>Applicable: End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.SleepOptions">
            <summary>
            Configure options for sleep.
            </summary>
            <remarks>
            Unused option bits should be set to 0. Sleep options include: 
            0x02 - Always wake for ST time, 
            0x04 - Sleep entire SN * SP time, 
            0x06 - Enabled extended sleep and wake for ST time.
            Sleep options should not be used for most applications. 
            See chapter 6 for more information.
            <para>Range: 0 - 0xFF.</para>
            <para>Default: 0.</para>
            <para>Applicable: End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.WakeHost">
            <summary>
            Set/Read the wake host timer value.
            </summary>
            <remarks>
            If the wake host timer is set to a nonzero value, this timer specifies a time 
            (in millisecond units) that the device should allow after waking from sleep before 
            sending data out the UART or transmitting an IO sample. If serial characters are received, 
            the WH timer is stopped immediately.
            <para>Range: 0 - 0xFFFF (x 1ms).</para>
            <para>Applicable: End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.SleepImmediately">
            <summary>
            Cause a cyclic sleep module to sleep immediately rather than wait
            for the ST timer to expire.
            </summary>
            <remarks>
            <para>Applicable: End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.PoolingRate">
            <summary>
            Set/Read the end device poll rate.
            </summary>
            <remarks>
            Setting this to 0 (default) enables polling at 100 ms (default rate). 
            Adaptive polling may allow the end device to poll more rapidly for 
            a short time when receiving RF data.
            <para>Range: 0 - 0x3E8.</para>
            <para>Default: 0x00 (100 msec).</para>
            <para>Applicable: End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.ApplyChanges">
            <summary>
            Applies changes to all command registers causing queued command 
            register values to be applied.
            </summary>
            <remarks>
            For example, changing the serial interface rate with the BD command will 
            not change the UART interface rate until changes are applied with the AC command. 
            The CN command and 0x08 API command frame also apply changes.
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.Write">
            <summary>
            Write parameter values to non-volatile memory so that parameter modifications 
            persist through subsequent resets.
            </summary>
            <remarks>
            Note: Once WR is issued, no additional characters should be sent to the module until 
            after the "OK\r" response is received. The WR command should be used sparingly. 
            The EM250 supports a limited number of write cycles.
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.RestoreDefaults">
            <summary>
            Restore module parameters to factory defaults.
            </summary>
            <remarks>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.SoftwareReset">
            <summary>
            Reset module.
            </summary>
            <remarks>
            Responds immediately with an OK status, and then performs a software 
            reset about 2 seconds later.
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.NetworkReset">
            <summary>
            Reset network layer parameters on one or more modules within a PAN.
            </summary>
            <remarks>
            Responds immediately with an 'OK' then causes a network restart. All network
            configuration and routing information is consequently lost.
            If NR = 0: Resets network layer parameters on the node issuing the command.
            If NR = 1: Sends broadcast transmission to reset network 
            layer parameters on all nodes in the PAN.
            <para>Range: 0 - 1.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.CommissioningPushButton">
            <summary>
            This command can be used to simulate commissioning button presses in software.
            </summary>
            <remarks>
            The parameter value should be set to the number of button presses to be simulated. 
            For example, sending the ATCB1 command will execute the action associated with 
            1 commissioning button press.
            <para>
            Note: Setting CB=2 will send out the new value of NJ unless NJ has been set to either 0 
            or 255 (joining permanently disabled or permanently enabled respectively). 
            In these two cases, setting CB=2 enables joining for one minute. 
            Joining will be disabled after the minute expires.
            </para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.NodeDiscover">
            <summary>
            Discovers and reports all RF modules found.
            </summary>
            <remarks>
            After (NT * 100) milliseconds, the command ends by returning a carrage return. 
            ND also accepts a Node Identifier (NI) as a parameter (optional). In this case, 
            only a module that matches the supplied identifier will respond. If ND is sent 
            through the API, each response is returned as a separate AT_CMD_Response packet. 
            The data consists of the above listed bytes without the carriage return delimiters. 
            The NI string will end in a "0x00" null character. The radius of the ND command 
            is set by the BH command.
            <para>Range: optional 20-Byte ƒNI or MY value.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.DestinationNode">
            <summary>
            Resolves an NI (Node Identifier) string to a physical address (casesensitive).
            </summary>
            <remarks>
            If there is no response from a module within (NT * 100) milliseconds or a parameter is 
            not specified (left blank), the command is terminated and an “ERROR” message is returned. 
            In the case of an ERROR, Command Mode is not exited. The radius of the DN command is set 
            by the BH command.
            <para>Range: up to 20-Byte printable ASCII string.</para>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.ForceSample">
            <summary>
            Forces a read of all enabled digital and analog input lines.
            </summary>
            <remarks>
            <para>Applicable: Coordinator, Router, End Device.</para>
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.XbeeSensorSample">
            <summary>
            Forces a sample to be taken on an XBee Sensor device.
            </summary>
            <remarks>
            This command can only be issued to an XBee sensor device using an API remote command.
            <para>Applicable: Router, End Device.</para>
            </remarks>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Zigbee.DeviceType">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.DeviceType.Unknown">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.DeviceType.ConnectPortX8Gateway">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.DeviceType.ConnectPortX4Gateway">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.DeviceType.ConnectPortX2Gateway">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.DeviceType.RS232Adapter">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.DeviceType.RS485Adapter">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.DeviceType.XBeeSensorAdapter">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.DeviceType.WallRouter">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.DeviceType.DigitalIOAdapter">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.DeviceType.AnalogIOAdapter">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.DeviceType.XStick">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.DeviceType.SmartPlug">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.DeviceType.XBeeLargeDisplay">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.DeviceType.XBeeSmallDisplay">
            <summary>
            TODO: Update comments    
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Zigbee.NodeType">
            <summary>
            Node Type
            </summary>
            <remarks>
            TODO: Update  comments    
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.NodeType.Coordinator">
            <summary>
            TODO: Update comments        
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.NodeType.Router">
            <summary>
            TODO: Update comments        
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.NodeType.EndDevice">
            <summary>
            TODO: Update comments        
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Zigbee.IZigbeePacket">
            <summary>
              TODO: Update Comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Zigbee.DiscoverResult">
            <summary>
            Series 2 XBee. Parses a Node Discover (ND) AT Command Response
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Zigbee.ExplicitRxResponse">
            <summary>
            Series 2 XBee. This packet is received when a remote XBee sends a ExplicitTxRequest
            Radio must be configured for explicit frames to use this class (AO=1)
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Zigbee.RxResponse">
            <summary>
            Series 2 XBee. This packet is received when a remote XBee sends a TxRequest
            API ID: 0x90
            </summary>
            <remarks>
            ZNet RX packets do not include RSSI since it is a mesh network and potentially requires several
            hops to get to the destination.  The RSSI of the last hop is available using the DB AT command.
            If your network is not mesh (i.e. composed of a single coordinator and end devices -- no routers) 
            then the DB command should provide accurate RSSI.
            </remarks>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Zigbee.ExplicitTxRequest">
            <summary>
            Series 2 XBee.  Sends a packet to a remote radio.  
            The remote radio receives the packet as a ExplicitRxResponse packet.
            API ID: 0x11
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Zigbee.TxRequest">
            <summary>
            Series 2 XBee.  Sends a packet to a remote radio.
            The remote radio receives the data as a RxResponse packet.
            API ID: 0x10
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.TxRequest.ZnetMaxPayloadSize">
            This is the maximum payload size for ZNet firmware, as specified in the datasheet.
            This value is provided for reference only and is not enforced by this software unless
            max size unless specified in the setMaxPayloadSize(byte) method.
            Note: this size refers to the packet size prior to escaping the control bytes.
            Note: ZB Pro firmware provides the ATNP command to determine max payload size.
            For ZB Pro firmware, the TX Status will return a PAYLOAD_TOO_LARGE (0x74) delivery status 
            if the payload size is exceeded
        </member>
        <!-- Badly formed XML comment ignored for member "T:NETMF.OpenSource.XBee.Api.Zigbee.NodeIdentificationResponse" -->
        <member name="P:NETMF.OpenSource.XBee.Api.Zigbee.NodeIdentificationResponse.Sender">
            <summary>
            Serial and network address of node that transmited this packet
            this will be equal to remote serial and address if there were
            not hops in between.
            </summary>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.Zigbee.NodeIdentificationResponse.Remote">
            <summary>
            Serial and netowork address of remote node that was identified
            </summary>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.Zigbee.NodeIdentificationResponse.ProfileId">
            <summary>
            Set to Digi's application profile ID.
            </summary>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.Zigbee.NodeIdentificationResponse.MfgId">
            <summary>
            Set to Digi's Manufacturer ID.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.NodeIdentificationResponse.PacketOption.Ack">
            <summary>
            Packet Acknowledged
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.NodeIdentificationResponse.PacketOption.Broadcast">
            <summary>
            Packet was a broadcast packet
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.NodeIdentificationResponse.SourceActions.Pushbutton">
            <summary>
            Frame sent by node identific ation pushbutton event (see D0 command)
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.NodeIdentificationResponse.SourceActions.Joining">
            <summary>
            Frame sent after joining event occurred (see <see cref="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.JoinNotification"/>).
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.NodeIdentificationResponse.SourceActions.PowerCycle">
            <summary>
            Frame sent after power cycle event occurred (see <see cref="F:NETMF.OpenSource.XBee.Api.Zigbee.AtCmd.JoinNotification"/>).
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Zigbee.IoSampleResponse">
            <summary>
            Series 2 XBee. Represents an I/O Sample response sent from a remote radio.
            Provides access to the XBee's 4 Analog (0-4), 11 Digital (0-7,10-12), and 1 Supply Voltage pins
            </summary>
            <remarks>
            Series 2 XBee does not support multiple samples (IT) per packet
            </remarks>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Zigbee.IoSampleResponse.IsDigitalOn(NETMF.OpenSource.XBee.Api.Zigbee.IoSampleResponse.Pin)">
            <summary>
            If digital I/O line (DIO0) is enabled: returns true if digital 0 is HIGH (ON); false if it is LOW (OFF).
            If digital I/O line is not enabled this method returns false.
            </summary>
            <remarks>
            Important: the pin number corresponds to the logical pin (e.g. D4), not the physical pin number.
            Digital I/O pins seem to report high when open circuit (unconnected)
            </remarks>
            <param name="pin"></param>
            <returns></returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Api.Zigbee.IoSampleResponse.GetAnalog(NETMF.OpenSource.XBee.Api.Zigbee.IoSampleResponse.Pin)">
            <summary>
            Returns a 10 bit value of ADC line 0, if enabled.
            Returns -1 if ADC line 0 is not enabled.
            </summary>
            <remarks>
            The range of Digi XBee series 2 ADC is 0 - 1.2V and although I couldn't find this 
            in the spec a few google searches seems to confirm. When I connected 3.3V to just 
            one of the ADC pins, it displayed its displeasure by reporting all ADC pins at 1023.
            <para>Analog pins seem to float around 512 when open circuit</para>
            The reason this returns null is to prevent bugs in the event that you thought 
            you were reading the actual value when the pin is not enabled.
            </remarks>
            <param name="pin"></param>
            <returns></returns>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.IoSampleResponse.Pin.SupplyVoltage">
            <summary>
            The voltage supply threshold is set with the V+ command.  
            If the measured supply voltage falls below or equal to this threshold, 
            the supply voltage will be included in the IO sample set.
            V+ is set to 0 by default (do not include the supply voltage). 
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Zigbee.ProfileId">
            <summary>
            Application profiles provide messaging schemes allowing to communicate with connected device.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.ProfileId.ZigbeeDevice">
            <summary>
            Zigbee Device Profile (ZDP).
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.ProfileId.HomeAutomation">
            <summary>
            Smart homes (HA).
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.ProfileId.TelecomServices">
            <summary>
            Value-added services (TA).
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.ProfileId.HealthCare">
            <summary>
            Health and fitness monitoring (HC).
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.ProfileId.SmartEnergy">
            <summary>
            Home energy savings (SE). 
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.ProfileId.Digi">
            <summary>
            Digi private profile called Drop-In-Networking.
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Api.Zigbee.TxStatusResponse">
            <summary>
            Series 2 XBee.  This is sent out the UART of the transmitting XBee immediately following
            a Transmit packet.  Indicates if the Transmit packet (TxRequest) was successful.
            </summary>
        </member>
        <member name="P:NETMF.OpenSource.XBee.Api.Zigbee.TxStatusResponse.IsSuccess">
            <summary>
            Returns true if the delivery status is SUCCESS
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.TxStatusResponse.DeliveryResult.MacAckFailure">
            <summary>
            MAC ACK Failure.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.TxStatusResponse.DeliveryResult.CcaFailure">
            <summary>
            CCA Failure.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.TxStatusResponse.DeliveryResult.BroadcastFailed">
            <summary>
            Broadcast source failed to hear a neighbor relay the message.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.TxStatusResponse.DeliveryResult.InvalidBinding">
            <summary>
            Invalid binding table index.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.TxStatusResponse.DeliveryResult.ResourceError">
            <summary>
            Lack of free buffers, timers, etc.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.TxStatusResponse.DeliveryResult.AttemptedBroadcast">
            <summary>
            Attempted broadcast with APS transmission.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.TxStatusResponse.DeliveryResult.AttemptedUnicast">
            <summary>
            Attempted unicast with APS transmission, but EE=0.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.TxStatusResponse.DeliveryResult.ResourceError2">
            <summary>
            Lack of free buffers, timers, etc.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.TxStatusResponse.DeliveryResult.PayloadTooLarge">
            <summary>
            Data payload too large.
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Api.Zigbee.TxStatusResponse.DeliveryResult.MessageUnrequested">
            <summary>
            Indirect message unrequested.
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.IXBeeConnection">
            <summary>
              TODO: Update Comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="M:NETMF.OpenSource.XBee.IXBeeConnection.Open">
            <summary>
              TODO: Update Comments
                
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.IXBeeConnection.Close">
            <summary>
              TODO: Update Comments
                
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.IXBeeConnection.Send(System.Byte[])">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="data" type="byte[]">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.IXBeeConnection.Send(System.Byte[],System.Int32,System.Int32)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="data" type="byte[]">
                <para>
                    
                </para>
            </param>
            <param name="offset" type="int">
                <para>
                    
                </para>
            </param>
            <param name="count" type="int">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="P:NETMF.OpenSource.XBee.IXBeeConnection.Connected">
            <summary>
              TODO: Update Comments
                
            </summary>
        </member>
        <member name="E:NETMF.OpenSource.XBee.IXBeeConnection.DataReceived">
            <summary>
              TODO: Update Comments
                
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.DataReceivedEventHandler">
            <summary>
                
            </summary>
            <param name="data" type="byte[]">
                <para>
                    
                </para>
            </param>
            <param name="offset" type="int">
                <para>
                    
                </para>
            </param>
            <param name="count" type="int">
                <para>
                    
                </para>
            </param>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Util.AdcHelper">
            <summary>
             TODO: Update comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Util.AdcHelper.ToMilliVolts(System.UInt16)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="adcReading" type="ushort">
                <para>
                    
                </para>
            </param>
            <returns>
                A double value...
            </returns>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Util.ByteUtils">
            <summary>
             TODO: Update comments
                
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Util.ByteUtils.Hex">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Util.ByteUtils.ToBase16(System.Byte[])">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="value" type="byte[]">
                <para>
                    
                </para>
            </param>
            <returns>
                A string value...
            </returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Util.ByteUtils.ToBase16(System.UInt16)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="b" type="ushort">
                <para>
                    
                </para>
            </param>
            <returns>
                A string value...
            </returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Util.ByteUtils.FromBase16(System.String)">
            <summary>
            Taken from here
            http://code.tinyclr.com/project/100/another-fast-hex-string-to-byte-conversion/
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Util.ByteUtils.GetBit(System.Byte,System.Int32)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="value" type="byte">
                <para>
                    
                </para>
            </param>
            <param name="bit" type="int">
                <para>
                    
                </para>
            </param>
            <returns>
                A bool value...
            </returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Util.ByteUtils.FormatByte(System.Byte)">
            <summary>
              TODO: Update Comments
                
            </summary>
            <param name="value" type="byte">
                <para>
                    
                </para>
            </param>
            <returns>
                A string value...
            </returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Util.InputStream.Read(System.Int32)">
            <summary>
            Reads <paramref name="count"/> bytes from the input stream and returns the bytes in an array
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Util.LogLevel">
            <summary>
              TODO: Update Comments
                
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Util.LogLevel.Off">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Util.LogLevel.Fatal">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Util.LogLevel.Error">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Util.LogLevel.Warn">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Util.LogLevel.Info">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Util.LogLevel.Debug">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Util.LogLevel.LowDebug">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.Util.LogLevel.All">
            <summary>
             TODO: Update Comments
                
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Util.Logger">
            <summary>
            TODO: Update Comments
            </summary>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Util.Logger.Initialize(NETMF.OpenSource.XBee.Util.LogWriteDelegate,NETMF.OpenSource.XBee.Util.LogLevel[])">
            <summary>
            TODO: Update Comments
            </summary>
            <param name="logWritter"></param>
            <param name="logLevel"></param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Util.Logger.IsActive(NETMF.OpenSource.XBee.Util.LogLevel)">
            <summary>
            TODO: Update Comments
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Util.Logger.LessOrEqual(NETMF.OpenSource.XBee.Util.LogLevel,NETMF.OpenSource.XBee.Util.LogLevel)">
            <summary>
            TODO: Update Comments
            </summary>
            <param name="level"></param>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Util.Logger.Fatal(System.String)">
            <summary>
            TODO: Update Comments
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Util.Logger.Error(System.String)">
            <summary>
            TODO: Update Comments
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Util.Logger.Warn(System.String)">
            <summary>
            TODO: Update Comments
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Util.Logger.Info(System.String)">
            <summary>
            TODO: Update Comments
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Util.Logger.Debug(System.String)">
            <summary>
            TODO: Update Comments
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Util.Logger.LowDebug(System.String)">
            <summary>
            TODO: Update Comments
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Util.Logger.Log(System.String,NETMF.OpenSource.XBee.Util.LogLevel)">
            <summary>
            TODO: Update Comments
            </summary>
            <param name="message"></param>
            <param name="messageLevel"></param>
        </member>
        <member name="T:NETMF.OpenSource.XBee.Util.LogWriteDelegate">
            <summary>
            TODO: Update Comments
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Util.UshortUtils.ToUshort(System.Byte[])">
            <summary>
            Converts bytes into ushort value.
            </summary>
            <param name="bytes">1-2 bytes</param>
            <returns>Ushort value</returns>
        </member>
        <member name="M:NETMF.OpenSource.XBee.Util.UshortUtils.GetBit(System.UInt16,System.Byte)">
            <summary>
            Get the value of specified <paramref name="bit"/>.
            </summary>
            <param name="value">Value to get the <paramref name="bit"/> value from</param>
            <param name="bit">Number of bit to retrieve (0 is LSB)</param>
            <returns><c>true</c> if bit is set, <c>false</c> otherwise</returns>
        </member>
        <member name="T:NETMF.OpenSource.XBee.XBeeApi">
            <summary>
            This is an API for communicating with Digi XBeeApi 802.15.4 and ZigBee radios
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.XBeePin">
            <summary>
            Represents a configurable XBee pin and associated name, pin number, AT command, 
            default capability and list of supported capabilities.
            </summary>
        </member>
        <member name="T:NETMF.OpenSource.XBee.XBeePin.Capability">
            <summary>
            Contains all possible pin configurations and the associated AT command value
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.XBeePin.Capability.UnmonitoredInput">
            <summary>
            only zigbee
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.XBeePin.Capability.NodeIdEnabled">
            <summary>
            only zigbee
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.XBeePin.Capability.Rs485TxLow">
            <summary>
            only zigbee
            </summary>
        </member>
        <member name="F:NETMF.OpenSource.XBee.XBeePin.Capability.Rs485TxHigh">
            <summary>
            only zigbee
            </summary>
        </member>
    </members>
</doc>
